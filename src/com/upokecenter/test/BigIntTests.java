package com.upokecenter.test;
/*
 * Created by SharpDevelop.
 * User: Peter
 * Date: 12/1/2013
 * Time: 11:22 PM
 *
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */

import org.junit.Assert;
import org.junit.Test;
import com.upokecenter.util.*;

  public class BigIntTests
  {
    @Test
    public void TestShifts() {
      TestCommon.DoTestShiftLeft("-123811", 139, "-86283673867977343180521212970464571450529415168");
      TestCommon.DoTestShiftRight("-1042721", 127, "-1");
      TestCommon.DoTestShiftLeft("28289813377724706864", 42, "124419915025685412732996321017856");
      TestCommon.DoTestShiftRight("-88556196", 89, "-1");
      TestCommon.DoTestShiftLeft("95420016902683", 124, "2029359325205057921124007216852651400359607982358528");
      TestCommon.DoTestShiftRight("54724161556258550", 46, "777");
      TestCommon.DoTestShiftLeft("3155330479", 172, "18888788629006754555486743276665668286507090108498535077904384");
      TestCommon.DoTestShiftRight("505922772707026529601", 162, "0");
      TestCommon.DoTestShiftLeft("43", 179, "32948654128616610454704461083731647447802891126947446784");
      TestCommon.DoTestShiftRight("55107506188695852", 155, "0");
      TestCommon.DoTestShiftLeft("139927165764765735", 98, "44344688917485059031953365589728191494058147840");
      TestCommon.DoTestShiftRight("-129681850326606", 82, "-1");
      TestCommon.DoTestShiftLeft("-5932507074570", 65, "-218870879440128273010605152010240");
      TestCommon.DoTestShiftRight("-164856599394495851262", 136, "-1");
      TestCommon.DoTestShiftLeft("977182433954", 76, "73833817180053605702782459779743744");
      TestCommon.DoTestShiftRight("806", 59, "0");
      TestCommon.DoTestShiftLeft("-622514242515706286301", 48, "-175222181914160088088864870373523456");
      TestCommon.DoTestShiftRight("-3705319301976962591455", 198, "-1");
      TestCommon.DoTestShiftLeft("-3291470468389122029764629", 164, "-76967831660432252522639645744788730028057863137718831277031149803315134464");
      TestCommon.DoTestShiftRight("-7874", 6, "-124");
      TestCommon.DoTestShiftLeft("-98", 122, "-521057374347687022178292367629895073792");
      TestCommon.DoTestShiftRight("-68211003", 140, "-1");
      TestCommon.DoTestShiftLeft("-49", 91, "-121318123849967266940114173952");
      TestCommon.DoTestShiftRight("6068902883", 26, "90");
      TestCommon.DoTestShiftLeft("-648511782422", 3, "-5188094259376");
      TestCommon.DoTestShiftRight("-40179201736463413834", 119, "-1");
      TestCommon.DoTestShiftLeft("404345", 2, "1617380");
      TestCommon.DoTestShiftRight("3885671755362666632018353", 98, "0");
      TestCommon.DoTestShiftLeft("6693", 78, "2022835127670178266577108992");
      TestCommon.DoTestShiftRight("-46103832", 141, "-1");
      TestCommon.DoTestShiftLeft("-529", 125, "-22501171512647055896515645916425672982528");
      TestCommon.DoTestShiftRight("9513521405775", 126, "0");
      TestCommon.DoTestShiftLeft("874040407364540365", 46, "61505125826776570556365259407360");
      TestCommon.DoTestShiftRight("-841759", 42, "-1");
      TestCommon.DoTestShiftLeft("5217653305", 38, "1434217619637844049920");
      TestCommon.DoTestShiftRight("45", 23, "0");
      TestCommon.DoTestShiftLeft("-96686542299678294981", 195, "-4855290099662786731169262873707071307803974155563754428764583550664097092599808");
      TestCommon.DoTestShiftRight("-30237963515951208960", 165, "-1");
      TestCommon.DoTestShiftLeft("8499707889996682", 44, "149528442524012194768944627712");
      TestCommon.DoTestShiftRight("-8360715847", 13, "-1020596");
      TestCommon.DoTestShiftLeft("-13500389315847", 74, "-255015144043389332767251838216962048");
      TestCommon.DoTestShiftRight("644885602", 15, "19680");
      TestCommon.DoTestShiftLeft("0", 168, "0");
      TestCommon.DoTestShiftRight("883", 161, "0");
      TestCommon.DoTestShiftLeft("-846142254218060", 43, "-7442745978122825221254676480");
      TestCommon.DoTestShiftRight("2429", 70, "0");
      TestCommon.DoTestShiftLeft("70238713904", 122, "373453059636496095662395719277785618832808738816");
      TestCommon.DoTestShiftRight("682796443119308234148", 24, "40697839446026");
      TestCommon.DoTestShiftLeft("6477547737146361502", 81, "15661749414445103242955092351813456656072704");
      TestCommon.DoTestShiftRight("-3903", 103, "-1");
      TestCommon.DoTestShiftLeft("-266357775008", 122, "-1416200845742453577740480658355175655915684626432");
      TestCommon.DoTestShiftRight("3647870029988653182652", 184, "0");
      TestCommon.DoTestShiftLeft("-79809915886898858", 3, "-638479327095190864");
      TestCommon.DoTestShiftRight("3", 121, "0");
      TestCommon.DoTestShiftLeft("-2422110", 17, "-317470801920");
      TestCommon.DoTestShiftRight("-401218", 66, "-1");
      TestCommon.DoTestShiftLeft("992748386", 3, "7941987088");
      TestCommon.DoTestShiftRight("4778037404628", 13, "583256519");
      TestCommon.DoTestShiftLeft("63975617419684836311569", 90, "79197978341831104917323202958826721363112499347456");
      TestCommon.DoTestShiftRight("96435828997095659644", 111, "0");
      TestCommon.DoTestShiftLeft("-5", 36, "-343597383680");
      TestCommon.DoTestShiftRight("260454703626230583606495", 9, "508700593019981608606");
      TestCommon.DoTestShiftLeft("-601433411293917760", 28, "-161446052014318363932098560");
      TestCommon.DoTestShiftRight("4305", 29, "0");
      TestCommon.DoTestShiftLeft("5", 14, "81920");
      TestCommon.DoTestShiftRight("638492240656249", 126, "0");
      TestCommon.DoTestShiftLeft("-174114439481063087626", 37, "-23930106346641189525326472937472");
      TestCommon.DoTestShiftRight("-86865914012216193570", 67, "-1");
      TestCommon.DoTestShiftLeft("7448512080846", 56, "536721859708202934021553913856");
      TestCommon.DoTestShiftRight("-363324644456667305376877", 54, "-20168570");
      TestCommon.DoTestShiftLeft("-59703", 93, "-591269873323640468418419308363776");
      TestCommon.DoTestShiftRight("5512", 3, "689");
      TestCommon.DoTestShiftLeft("71487", 98, "22655134614628858806198705510678528");
      TestCommon.DoTestShiftRight("-147781341312", 189, "-1");
      TestCommon.DoTestShiftLeft("24", 11, "49152");
      TestCommon.DoTestShiftRight("0", 165, "0");
      TestCommon.DoTestShiftLeft("3", 193, "37662610412320084583014736539245998496614132666784207077376");
      TestCommon.DoTestShiftRight("-49", 121, "-1");
      TestCommon.DoTestShiftLeft("67819", 52, "305429623128639668224");
      TestCommon.DoTestShiftRight("2234156114144769734811162", 160, "0");
      TestCommon.DoTestShiftLeft("700", 134, "15244650038058043163159182412943215873228800");
      TestCommon.DoTestShiftRight("-77942712427873200200", 42, "-17722121");
      TestCommon.DoTestShiftLeft("6276576613950791521892", 136, "546766936667080900941860629192067668342714170840790299953856512");
      TestCommon.DoTestShiftRight("-903805304660224075644", 107, "-1");
      TestCommon.DoTestShiftLeft("-2836032695181159871589597", 43, "-24946007400836748172953351472782770176");
      TestCommon.DoTestShiftRight("346", 102, "0");
      TestCommon.DoTestShiftLeft("73180669", 179, "56074524460041292967155038590510394807031584948934374034767872");
      TestCommon.DoTestShiftRight("-462574", 63, "-1");
      TestCommon.DoTestShiftLeft("-61846691821771550761", 96, "-4899999750624939552759129778674981145424687005696");
      TestCommon.DoTestShiftRight("4070", 171, "0");
      TestCommon.DoTestShiftLeft("5", 157, "913438523331814323877303020447676887284957839360");
      TestCommon.DoTestShiftRight("89205727177314305", 129, "0");
      TestCommon.DoTestShiftLeft("7353164484186685777542992", 192, "46156561544271952617470445314182180457600033770710223735869306004759221308418424832");
      TestCommon.DoTestShiftRight("39", 29, "0");
      TestCommon.DoTestShiftLeft("-45706435372006593296132", 73, "-431685076904423040042061488261919348300447744");
      TestCommon.DoTestShiftRight("-50477768822581203", 32, "-11752772");
      TestCommon.DoTestShiftLeft("233613", 53, "2104198839497807364096");
      TestCommon.DoTestShiftRight("-381495", 158, "-1");
      TestCommon.DoTestShiftLeft("501640124", 112, "2604664439960221389894664116371513780731904");
      TestCommon.DoTestShiftRight("-8961068350471589879", 162, "-1");
      TestCommon.DoTestShiftLeft("-1", 137, "-174224571863520493293247799005065324265472");
      TestCommon.DoTestShiftRight("9717938618514529802101200", 172, "0");
      TestCommon.DoTestShiftLeft("-69361174639252149690567", 80, "-83852514900191336137353800653459076861543841792");
      TestCommon.DoTestShiftRight("3555206", 136, "0");
      TestCommon.DoTestShiftLeft("9003966547185242187", 99, "5706941798987135232828143652732062465862880198656");
      TestCommon.DoTestShiftRight("7362294472154", 137, "0");
      TestCommon.DoTestShiftLeft("26157856168344161230", 83, "252983261661416388301424194976434643366051840");
      TestCommon.DoTestShiftRight("891123745507778486444707", 182, "0");
      TestCommon.DoTestShiftLeft("-6296435485198158", 177, "-1206157413051990810652567234011004812833057585885263191632909199998976");
      TestCommon.DoTestShiftRight("-382988301589610888064772", 58, "-1328758");
      TestCommon.DoTestShiftLeft("62784", 30, "67413806678016");
      TestCommon.DoTestShiftRight("-3291246071", 51, "-1");
      TestCommon.DoTestShiftLeft("-1907", 115, "-79213680873807330300861251998581784576");
      TestCommon.DoTestShiftRight("412", 38, "0");
      TestCommon.DoTestShiftLeft("-5814660581727282747714", 181, "-17821882826291432240087538109542473506206387058060837927869725636311098851328");
      TestCommon.DoTestShiftRight("4999343069658270652", 49, "8880");
      TestCommon.DoTestShiftLeft("9426764351514347372", 165, "440871409103065790281574788744142448682977823185765935880479445090304");
      TestCommon.DoTestShiftRight("503385687552", 90, "0");
      TestCommon.DoTestShiftLeft("7982017008", 159, "5832865463197557408549322571506502950717625933067561467904");
      TestCommon.DoTestShiftRight("-9453086317049542866898158", 129, "-1");
      TestCommon.DoTestShiftLeft("694015497", 177, "132946956805540458297541352018274290221602936299449548678365184");
      TestCommon.DoTestShiftRight("82561056005194903194926", 175, "0");
      TestCommon.DoTestShiftLeft("-346368781400224616899", 15, "-11349812228922560246546432");
      TestCommon.DoTestShiftRight("-2132051051606692161325415", 149, "-1");
      TestCommon.DoTestShiftLeft("578", 14, "9469952");
      TestCommon.DoTestShiftRight("-617445132045510", 7, "-4823790094106");
      TestCommon.DoTestShiftLeft("321390741239", 44, "5653965712829249616871424");
      TestCommon.DoTestShiftRight("394866477762133948329677", 7, "3084894357516671471325");
      TestCommon.DoTestShiftLeft("-3571856767", 41, "-7854596096133781520384");
      TestCommon.DoTestShiftRight("-77740673380579212872779", 126, "-1");
      TestCommon.DoTestShiftLeft("554716281", 87, "85838186836672505470349979961786368");
      TestCommon.DoTestShiftRight("-2491111508224483833843", 98, "-1");
      TestCommon.DoTestShiftLeft("-43763", 100, "-55476193217788003297700222376869888");
      TestCommon.DoTestShiftRight("-71899707484548", 48, "-1");
      TestCommon.DoTestShiftLeft("6", 191, "18831305206160042291507368269622999248307066333392103538688");
      TestCommon.DoTestShiftRight("-291706875275252552049", 105, "-1");
      TestCommon.DoTestShiftLeft("28", 93, "277298568799925181577403826176");
      TestCommon.DoTestShiftRight("-9150980379467", 33, "-1066");
      TestCommon.DoTestShiftLeft("-1964241106476506", 185, "-96326103579543201568342980649038011122960462193050200876974918223265792");
      TestCommon.DoTestShiftRight("-788549887", 79, "-1");
      TestCommon.DoTestShiftLeft("28156466", 89, "17428008313088737003633922321416192");
      TestCommon.DoTestShiftRight("-265905120797", 193, "-1");
      TestCommon.DoTestShiftLeft("486756148166895328075886", 171, "1456936770614888654996623992625677003450662958466370311338933684396598755328");
      TestCommon.DoTestShiftRight("-39002800", 12, "-9523");
      TestCommon.DoTestShiftLeft("32628", 172, "195321345731922740900453698444766750168407109682056921088");
      TestCommon.DoTestShiftRight("70179081893360304", 39, "127655");
      TestCommon.DoTestShiftLeft("-2895683052002632477775333", 15, "-94885742248022261031742111744");
      TestCommon.DoTestShiftRight("-806780351465401907682719", 105, "-1");
      TestCommon.DoTestShiftLeft("-52028176198826166407898", 65, "-1919500901923225862483227951132725882126336");
      TestCommon.DoTestShiftRight("3740338", 180, "0");
      TestCommon.DoTestShiftLeft("238058", 159, "173961078389860043450866401953386451546625994657890304");
      TestCommon.DoTestShiftRight("-3748690276920105573", 187, "-1");
      TestCommon.DoTestShiftLeft("-3284484", 154, "-75004355371674270943645493345301689336431186601312256");
      TestCommon.DoTestShiftRight("3567941358019290278", 59, "6");
      TestCommon.DoTestShiftLeft("-4", 36, "-274877906944");
      TestCommon.DoTestShiftRight("-25273360741553115441", 21, "-12051277514245");
      TestCommon.DoTestShiftLeft("431789683521346388758", 120, "573946935627682376381303076078844989588951071785492676608");
      TestCommon.DoTestShiftRight("13671044744856", 81, "0");
      TestCommon.DoTestShiftLeft("67174626506", 16, "4402356322697216");
      TestCommon.DoTestShiftRight("-26625", 99, "-1");
      TestCommon.DoTestShiftLeft("867588022729552", 123, "9225778308958403539119154468855817316895316944879616");
      TestCommon.DoTestShiftRight("-13358105978685665", 190, "-1");
      TestCommon.DoTestShiftLeft("-45756607993", 126, "-3892541717532892924092346256291420636607730941952");
      TestCommon.DoTestShiftRight("-855389270870349808174741", 71, "-363");
      TestCommon.DoTestShiftLeft("-2304118921677598987040", 34, "-39584461658800292420558111375360");
      TestCommon.DoTestShiftRight("-38", 9, "-1");
      TestCommon.DoTestShiftLeft("-39", 162, "-227994255423620855239774833903740151066325476704256");
      TestCommon.DoTestShiftRight("82961289139145624", 86, "0");
      TestCommon.DoTestShiftLeft("520096021644", 75, "19648672163883769218344286569889792");
      TestCommon.DoTestShiftRight("7328746659973", 164, "0");
      TestCommon.DoTestShiftLeft("-90", 100, "-114088554020540646134703288483840");
      TestCommon.DoTestShiftRight("-29337", 193, "-1");
      TestCommon.DoTestShiftLeft("-73311599717", 9, "-37535539055104");
      TestCommon.DoTestShiftRight("6360", 149, "0");
      TestCommon.DoTestShiftLeft("7409431609", 15, "242792254963712");
      TestCommon.DoTestShiftRight("-9", 187, "-1");
      TestCommon.DoTestShiftLeft("-400705", 175, "-19189957053208312343390045172320770044435839373580634685440");
      TestCommon.DoTestShiftRight("-669716254155788", 137, "-1");
      TestCommon.DoTestShiftLeft("5", 42, "21990232555520");
      TestCommon.DoTestShiftRight("-5463532", 80, "-1");
      TestCommon.DoTestShiftLeft("205127767121", 111, "532542130410316001526540173233402599920631808");
      TestCommon.DoTestShiftRight("-868", 33, "-1");
      TestCommon.DoTestShiftLeft("-748", 130, "-1018124841827447882682416825435850488676352");
      TestCommon.DoTestShiftRight("7669818074419242", 131, "0");
      TestCommon.DoTestShiftLeft("-32785410697205", 30, "-35203066682606008401920");
      TestCommon.DoTestShiftRight("403415734450823", 174, "0");
      TestCommon.DoTestShiftLeft("-90899630931933073401267", 163, "-1062799675518359803915259742908872710540972551013718838276842631762804736");
      TestCommon.DoTestShiftRight("6095284762439", 25, "181653");
      TestCommon.DoTestShiftLeft("9079", 34, "155976032321536");
      TestCommon.DoTestShiftRight("715300", 29, "0");
      TestCommon.DoTestShiftLeft("2347045339", 76, "177337731882704386294221692207104");
      TestCommon.DoTestShiftRight("2341844084040", 25, "69792");
      TestCommon.DoTestShiftLeft("1970639750289749185", 174, "47187447343314208396017248234478749860829861211041535274881408607191040");
      TestCommon.DoTestShiftRight("5", 70, "0");
      TestCommon.DoTestShiftLeft("-3954026059581734380670", 48, "-1112959393034095598235580141949419520");
      TestCommon.DoTestShiftRight("17952157", 7, "140251");
      TestCommon.DoTestShiftLeft("66885411437995", 75, "2526859401341868697653840355430236160");
      TestCommon.DoTestShiftRight("-312298325770276160960", 196, "-1");
      TestCommon.DoTestShiftLeft("429895", 146, "38347915428489288941721990427280669478453803745280");
      TestCommon.DoTestShiftRight("-7", 120, "-1");
    }

    @Test
    public void TestVarious2() {
      Assert.assertEquals(1, BigInteger.ZERO.getDigitCount());

      TestCommon.DoTestAdd("9731846470799281784086", "6611", "9731846470799281790697");
      TestCommon.DoTestSubtract("-72", "957411", "-957483");
      TestCommon.DoTestMultiply("430629184422466", "988633028108014", "425734234587266973533256242524");
      TestCommon.DoTestDivide("-27526500133", "8979", "-3065653");
      TestCommon.DoTestRemainder("5874281518905759887121", "-2278492313706247", "231277881421553");
      Assert.assertEquals("-85982603081837569410528286507767742826808344678",47,BigInteger.fromString("-85982603081837569410528286507767742826808344678").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "34073209154330329606552",
        "-188128765664805140",
        "-181116",
        "79632183481870312");
      TestCommon.DoTestPow("46", 5, "205962976");
      TestCommon.DoTestShiftLeft("-9945865215736428406542269", 24, "-166863929031296658445095460143104");
      TestCommon.DoTestShiftRight("406", 66, "0");
      TestCommon.DoTestAdd("866763280043291101", "-5", "866763280043291096");
      TestCommon.DoTestSubtract("-766411607999738756447", "-1636463758820399635", "-764775144240918356812");
      TestCommon.DoTestMultiply("-540416", "420115545", "-227037162366720");
      TestCommon.DoTestDivide("-97841761957", "79290972035269", "0");
      TestCommon.DoTestRemainder("-9", "-532848867432985518", "-9");
      Assert.assertEquals("3754645159261318682646",22,BigInteger.fromString("3754645159261318682646").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-406492108605301",
        "-31709120429660215161",
        "0",
        "-406492108605301");
      TestCommon.DoTestPow("-265841442049945599096", 8, "24944883084885856647891730011474971913720080452974650776019885458196955806924926937306723373915992476146444600747715202824669947517287802065707842519256876068110336");
      TestCommon.DoTestShiftLeft("-3538689", 131, "-9633227749736710482677965009584931363432169472");
      TestCommon.DoTestShiftRight("-76455707392", 137, "-1");
      TestCommon.DoTestAdd("46616995543283", "-979", "46616995542304");
      TestCommon.DoTestSubtract("1744", "67226110717709141", "-67226110717707397");
      TestCommon.DoTestMultiply("-7139886", "877374", "-6264350339364");
      TestCommon.DoTestDivide("-34343693559184", "-5308", "6470175877");
      TestCommon.DoTestRemainder("0", "-862107795463271", "0");
      Assert.assertEquals("-751469454502192",15,BigInteger.fromString("-751469454502192").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-455961453567943",
        "1897485864753694545",
        "0",
        "-455961453567943");
      TestCommon.DoTestPow("6380422", 7, "430472910666622499516951316522525657077202249088");
      TestCommon.DoTestShiftLeft("-140939", 120, "-187340064497930258211189663268851484196864");
      TestCommon.DoTestShiftRight("664547", 90, "0");
      TestCommon.DoTestAdd("-9449501974461756741", "980231675025516425", "-8469270299436240316");
      TestCommon.DoTestSubtract("-2438241702557351719933806", "2528303407048956146163", "-2440770005964400676079969");
      TestCommon.DoTestMultiply("-712137415461787535", "-2736210955245897", "1948558197827041891199253094493895");
      TestCommon.DoTestDivide("7", "488113909823934807582", "0");
      TestCommon.DoTestRemainder("52550232636324", "-5987168", "2935300");
      Assert.assertEquals("16142821412008035581565",23,BigInteger.fromString("16142821412008035581565").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-3",
        "44029",
        "0",
        "-3");
      TestCommon.DoTestPow("535695608", 9, "3632978031373267973380418025282921948365264209491300673708852404761485931184128");
      TestCommon.DoTestShiftLeft("869530830227205669061", 145, "38782370974327406508135588178463937295202950561153915940086218752");
      TestCommon.DoTestShiftRight("559192098", 66, "0");
      TestCommon.DoTestAdd("3556520425357444069951941", "-9", "3556520425357444069951932");
      TestCommon.DoTestSubtract("152634", "-596252", "748886");
      TestCommon.DoTestMultiply("-2052918178408", "-60055586", "123289204214344987088");
      TestCommon.DoTestDivide("1777", "-271", "-6");
      TestCommon.DoTestRemainder("-864670948519593993", "-7892821", "-5091196");
      Assert.assertEquals("808625313730178",15,BigInteger.fromString("808625313730178").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-1",
        "633",
        "0",
        "-1");
      TestCommon.DoTestPow("-99", 8, "9227446944279201");
      TestCommon.DoTestShiftLeft("-721970664721432", 63, "-6659004040421110696965111132717056");
      TestCommon.DoTestShiftRight("-97802555799727830676", 165, "-1");
      TestCommon.DoTestAdd("1786390916635395", "-309349613240", "1786081567022155");
      TestCommon.DoTestSubtract("5457564279228594", "95803103613488024500514", "-95803098155923745271920");
      TestCommon.DoTestMultiply("91459533325", "256850050027787", "23491385710044302302501775");
      TestCommon.DoTestDivide("842", "-3191768355", "0");
      TestCommon.DoTestRemainder("44", "594191381", "44");
      Assert.assertEquals("33247193590013259359290820",26,BigInteger.fromString("33247193590013259359290820").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "28746521232883",
        "18",
        "1597028957382",
        "7");
      TestCommon.DoTestPow("13054872470", 5, "379195494296093488944848471018074807358046100700000");
      TestCommon.DoTestShiftLeft("40", 74, "755578637259143234191360");
      TestCommon.DoTestShiftRight("950852365613099564", 100, "0");
      TestCommon.DoTestAdd("1984676104783", "-91567749261", "1893108355522");
      TestCommon.DoTestSubtract("252770016091", "-86722402912112", "86975172928203");
      TestCommon.DoTestMultiply("-65138829359762", "-481757", "31381087015870861834");
      TestCommon.DoTestDivide("-264163628529", "97422285275", "-2");
      TestCommon.DoTestRemainder("-6713114", "-6126539013521271867449", "-6713114");
      Assert.assertEquals("-8966987758778646498123659357330112",34,BigInteger.fromString("-8966987758778646498123659357330112").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "19099520195680903290",
        "-15",
        "-1273301346378726886",
        "0");
      TestCommon.DoTestPow("64305223", 5, "1099591168650287178130469031088840602343");
      TestCommon.DoTestShiftLeft("249954315338257105", 41, "549655352254405347130694696960");
      TestCommon.DoTestShiftRight("-2370756312883", 149, "-1");
      TestCommon.DoTestAdd("-257281050825671722296", "-90", "-257281050825671722386");
      TestCommon.DoTestSubtract("46255100730", "37648913138244712758", "-37648913091989612028");
      TestCommon.DoTestMultiply("46566667189725", "94179359", "4385618866694631886275");
      TestCommon.DoTestDivide("3256199462125848", "-3248221", "-1002456255");
      TestCommon.DoTestRemainder("85516011", "7", "0");
      Assert.assertEquals("2513414139966907201297604732544",31,BigInteger.fromString("2513414139966907201297604732544").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "83461019770",
        "4121237857247788",
        "0",
        "83461019770");
      TestCommon.DoTestPow("12425698791199360453759", 2, "154397990449613247579532580001260994377230081");
      TestCommon.DoTestShiftLeft("-7356988471972993964613", 137, "-1281768166734350711541146213743361513999928714099424033385742336");
      TestCommon.DoTestShiftRight("1116707", 35, "0");
      TestCommon.DoTestAdd("-8670307251934110434", "52285771663940680", "-8618021480270169754");
      TestCommon.DoTestSubtract("-6052743972", "-2069371868147737", "2069365815403765");
      TestCommon.DoTestMultiply("99422498529858445", "64939104341353681", "6456408005908560512517548609686045");
      TestCommon.DoTestDivide("-6527015266007105377561", "-66", "98894170697077354205");
      TestCommon.DoTestRemainder("-61", "462", "-61");
      Assert.assertEquals("-43837884353520374452206381591148518",35,BigInteger.fromString("-43837884353520374452206381591148518").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-18",
        "-27738",
        "0",
        "-18");
      TestCommon.DoTestPow("-719677956246348115981021", 0, "1");
      TestCommon.DoTestShiftLeft("-7", 60, "-8070450532247928832");
      TestCommon.DoTestShiftRight("8300789617", 22, "1979");
      TestCommon.DoTestAdd("-366479030", "-26", "-366479056");
      TestCommon.DoTestSubtract("3838432365011545272963", "-634026555120476", "3838432999038100393439");
      TestCommon.DoTestMultiply("8068", "549669465507158875", "4434733247711757803500");
      TestCommon.DoTestDivide("-3786407156511074831555", "3754666418352965475293977", "0");
      TestCommon.DoTestRemainder("-354773961029096170880534", "715192857350396", "-199438639721962");
      Assert.assertEquals("179048279487211368703894835967443904",36,BigInteger.fromString("179048279487211368703894835967443904").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-9940517216642016899",
        "1036319595332527",
        "-9592",
        "-139658212417915");
      TestCommon.DoTestPow("8547730345602592650133890", 3, "624528754888191142521533366491398790101420823173927063730527747378382869000");
      TestCommon.DoTestShiftLeft("-79530316044", 183, "-975038837608678866593741520597535504524111599904392099613168893952");
      TestCommon.DoTestShiftRight("41293969834007744", 133, "0");
      TestCommon.DoTestAdd("-49368188332056", "132146032938", "-49236042299118");
      TestCommon.DoTestSubtract("7360765762550", "-1746178", "7360767508728");
      TestCommon.DoTestMultiply("-5460141368146566898244", "315851077748135099", "-1724591535786270051675244081715897866156");
      TestCommon.DoTestDivide("89286257958463011513", "-57918", "-1541597740917556");
      TestCommon.DoTestRemainder("9392487551828735146630", "93067589280717954", "13374029398510996");
      Assert.assertEquals("-716358188845970974634892000",27,BigInteger.fromString("-716358188845970974634892000").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-636153540613511409398622",
        "361837",
        "-1758121863196719543",
        "-118131");
      TestCommon.DoTestPow("-3656232766594", 3, "-48876658719776941025866305896074712584");
      TestCommon.DoTestShiftLeft("5010455661618361548543168", 111, "13007886595824529991484626484114240823420982412709214552064");
      TestCommon.DoTestShiftRight("-9152626699684", 150, "-1");
      TestCommon.DoTestAdd("-9434925914222", "5760984348", "-9429164929874");
      TestCommon.DoTestSubtract("-5980950", "4412015707922768978571772", "-4412015707922768984552722");
      TestCommon.DoTestMultiply("2181", "-8099056784977607739957", "-17664042848036162480846217");
      TestCommon.DoTestDivide("-504695092473119833879", "-592", "852525494042432151");
      TestCommon.DoTestRemainder("-9235251797487266778", "188249896128655743808", "-9235251797487266778");
      Assert.assertEquals("4405892980538707593193144952448368",34,BigInteger.fromString("4405892980538707593193144952448368").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-6644160000397100446144135",
        "-1699131408403345002072",
        "3910",
        "-556193540021488042615");
      TestCommon.DoTestPow("-87481447985639259", 7, "-39211345035971807833483875743559491297331139121547323166854004972572026408640535835556892448917684665982677886232335219");
      TestCommon.DoTestShiftLeft("4292258570889981271", 158, "1568285732300827265314528313881501658491978713289933532902010650624");
      TestCommon.DoTestShiftRight("-50332563", 29, "-1");
      TestCommon.DoTestAdd("205174297224976", "16316374456", "205190613599432");
      TestCommon.DoTestSubtract("899482164470130551328432", "-3250164636065046882", "899485414634766616375314");
      TestCommon.DoTestMultiply("803103954", "-34787904220376214654842", "-27938303430757425356856355445268");
      TestCommon.DoTestDivide("-381409112", "48149636373795", "0");
      TestCommon.DoTestRemainder("-5", "-9719210694093545", "-5");
      Assert.assertEquals("1633816882945304883107212489580",31,BigInteger.fromString("1633816882945304883107212489580").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-38076850019",
        "629934969",
        "-60",
        "-280751879");
      TestCommon.DoTestPow("-19795577011", 2, "391864869198431694121");
      TestCommon.DoTestShiftLeft("5714206687956073432316", 110, "7417464358723255534121072764373251082684611976530755584");
      TestCommon.DoTestShiftRight("630420259755228", 0, "630420259755228");
      TestCommon.DoTestAdd("59323999354", "-93955226345241593218862", "-93955226345182269219508");
      TestCommon.DoTestSubtract("90908229762394150867", "32837841754037469024942", "-32746933524275074874075");
      TestCommon.DoTestMultiply("305610689839504063", "-561569613053", "-171621676838030695332331334339");
      TestCommon.DoTestDivide("-47375", "369210599428659762", "0");
      TestCommon.DoTestRemainder("-19758640220076986026694", "793506597", "-223856450");
      Assert.assertEquals("-7154022545719475306392761604851676204",37,BigInteger.fromString("-7154022545719475306392761604851676204").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "0",
        "-47847975853981096",
        "0",
        "0");
      TestCommon.DoTestPow("90003092", 7, "47841193694597145976079932815977021860866449765256347648");
      TestCommon.DoTestShiftLeft("-677662", 146, "-60449470370906636557357511664317735819462802669568");
      TestCommon.DoTestShiftRight("-76152165979", 78, "-1");
      TestCommon.DoTestAdd("933176813037073461724", "-184112761678312617", "932992700275395149107");
      TestCommon.DoTestSubtract("-1953996019256987957936", "19416739722753652921699", "-21370735742010640879635");
      TestCommon.DoTestMultiply("-590536", "262352189242146294991", "-154928412426300104458805176");
      TestCommon.DoTestDivide("-355677238", "-189433689206917717205", "0");
      TestCommon.DoTestRemainder("-4", "-37330799924187360", "-4");
      Assert.assertEquals("-333249837724620456",18,BigInteger.fromString("-333249837724620456").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "9",
        "-87457508504",
        "0",
        "9");
      TestCommon.DoTestPow("17037206754", 3, "4945328908694596499507279549064");
      TestCommon.DoTestShiftLeft("1622", 136, "141296127781315120060823964993107977979297792");
      TestCommon.DoTestShiftRight("-38746", 75, "-1");
      TestCommon.DoTestAdd("42", "129605425812", "129605425854");
      TestCommon.DoTestSubtract("-300968937666", "276076102838", "-577045040504");
      TestCommon.DoTestMultiply("4", "361942", "1447768");
      TestCommon.DoTestDivide("-7012969878486169188439", "84564983", "-82929950786913");
      TestCommon.DoTestRemainder("-783915174", "2748746827552020442258170", "-783915174");
      Assert.assertEquals("-1558177375744786559778489",25,BigInteger.fromString("-1558177375744786559778489").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-58195184484",
        "-38568214250493075",
        "0",
        "-58195184484");
      TestCommon.DoTestPow("-765", 1, "-765");
      TestCommon.DoTestShiftLeft("-568873", 82, "-2750901031126531770010505838592");
      TestCommon.DoTestShiftRight("-9665695350313", 34, "-563");
      TestCommon.DoTestAdd("7491786218315852898", "5103362202201289992598", "5110853988419605845496");
      TestCommon.DoTestSubtract("96092276918", "594199360", "95498077558");
      TestCommon.DoTestMultiply("5766", "63149", "364117134");
      TestCommon.DoTestDivide("13041619641", "-28", "-465772130");
      TestCommon.DoTestRemainder("85485930", "-15371417788525", "85485930");
      Assert.assertEquals("171406899976143266485223706680806",33,BigInteger.fromString("171406899976143266485223706680806").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-83",
        "-9586401142830749547458130",
        "0",
        "-83");
      TestCommon.DoTestPow("-6042082619014", 0, "1");
      TestCommon.DoTestShiftLeft("-575002195", 26, "-38587744103956480");
      TestCommon.DoTestShiftRight("-4710382587656721850", 76, "-1");
      TestCommon.DoTestAdd("-74010504912954382", "-1894861166", "-74010506807815548");
      TestCommon.DoTestSubtract("-2", "-799090", "799088");
      TestCommon.DoTestMultiply("-5152711897", "-45063722679502078", "232200379973779075346821966");
      TestCommon.DoTestDivide("777513003012368050398", "715549562682074377376536", "0");
      TestCommon.DoTestRemainder("-54649", "2300", "-1749");
      Assert.assertEquals("147828077716159306954944",24,BigInteger.fromString("147828077716159306954944").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "5485150312424207739",
        "532",
        "10310432918090616",
        "27");
      TestCommon.DoTestPow("6218486328002179124987", 4, "1495335815024281914778947508478192690190165974210107600439411045154533942045693599528561");
      TestCommon.DoTestShiftLeft("-1083", 111, "-2811628748896609160849263762272681984");
      TestCommon.DoTestShiftRight("-45396", 142, "-1");
      TestCommon.DoTestAdd("-150856395799", "-20118516650091068561", "-20118516800947464360");
      TestCommon.DoTestSubtract("-37418", "9", "-37427");
      TestCommon.DoTestMultiply("-612209782162", "-8", "4897678257296");
      TestCommon.DoTestDivide("8820957228542767684620611", "832861717152075495246", "10591");
      TestCommon.DoTestRemainder("-7435564", "645721263241", "-7435564");
      Assert.assertEquals("38050992151411552366387017168138983911084",41,BigInteger.fromString("38050992151411552366387017168138983911084").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "430136821968423245722561",
        "677951",
        "634465945132352110",
        "395951");
      TestCommon.DoTestPow("-12851828805", 9, "-9564987050831726901194260057377086768481628221467502865706105061018581679205727010626953125");
      TestCommon.DoTestShiftLeft("-449857387767155152", 63, "-4149202050904114520343568832912162816");
      TestCommon.DoTestShiftRight("208949", 37, "0");
      TestCommon.DoTestAdd("8809648935829556", "-189285739287349065", "-180476090351519509");
      TestCommon.DoTestSubtract("-680", "7378", "-8058");
      TestCommon.DoTestMultiply("1633253307170562600", "279784", "456958143293408686478400");
      TestCommon.DoTestDivide("760", "5216039096", "0");
      TestCommon.DoTestRemainder("271", "139820", "271");
      Assert.assertEquals("216596539380561487338426738143879581168",39,BigInteger.fromString("216596539380561487338426738143879581168").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "79931423",
        "-1129766937658217",
        "0",
        "79931423");
      TestCommon.DoTestPow("-678", 4, "211309379856");
      TestCommon.DoTestShiftLeft("-91", 21, "-190840832");
      TestCommon.DoTestShiftRight("989565522383473328033", 180, "0");
      TestCommon.DoTestAdd("78967964181499783", "1326890801", "78967965508390584");
      TestCommon.DoTestSubtract("5009027630439", "-730388670", "5009758019109");
      TestCommon.DoTestMultiply("526502", "640668", "337312983336");
      TestCommon.DoTestDivide("-9182678", "-2231306179211515", "0");
      TestCommon.DoTestRemainder("283068606558145", "-48106462829893262555", "283068606558145");
      Assert.assertEquals("39865519441176",14,BigInteger.fromString("39865519441176").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "9167781792878055",
        "264943372",
        "34602797",
        "75066571");
      TestCommon.DoTestPow("85890557408149647995", 4, "54422900601964953490460588956859321163508720903319827389679763013174670776000625");
      TestCommon.DoTestShiftLeft("7795763281589681239777168", 109, "5059739649609907591874282889704550188400527860520783446016");
      TestCommon.DoTestShiftRight("4564870311256095485543163", 191, "0");
      TestCommon.DoTestAdd("1313262825280479", "-153", "1313262825280326");
      TestCommon.DoTestSubtract("-202899423154859971374", "-357204719", "-202899423154502766655");
      TestCommon.DoTestMultiply("-3344114170168", "-3944269080702054955", "13190086123731252728692157582440");
      TestCommon.DoTestDivide("-26888681913509340555666", "3772802238140", "-7126978891");
      TestCommon.DoTestRemainder("5198423425011512", "-894323657803", "614325860476");
      Assert.assertEquals("20773342301970518523732459183784623",35,BigInteger.fromString("20773342301970518523732459183784623").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "8",
        "-76395",
        "0",
        "8");
      TestCommon.DoTestPow("8833570108138", 8, "37075761650273906759685772136743989510619278281979791361859963287135260966601118219869653388262624420096");
      TestCommon.DoTestShiftLeft("-1", 106, "-81129638414606681695789005144064");
      TestCommon.DoTestShiftRight("-23174444670849102355683", 58, "-80403");
      TestCommon.DoTestAdd("50", "-8969743562125", "-8969743562075");
      TestCommon.DoTestSubtract("-12127946039471", "40963577385", "-12168909616856");
      TestCommon.DoTestMultiply("-3234337035251690255667968", "7771186517277970280283723", "-25134636360680738588528133767881467966399922884864");
      TestCommon.DoTestDivide("69769", "-4463", "-15");
      TestCommon.DoTestRemainder("2", "10348933099707", "2");
      Assert.assertEquals("-393829286496444969299809344858420564215699",42,BigInteger.fromString("-393829286496444969299809344858420564215699").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-625542621",
        "8032646575377982497",
        "0",
        "-625542621");
      TestCommon.DoTestPow("622013315099093186", 4, "149692046547762535712194352997731202540921590945768491717171554763315216");
      TestCommon.DoTestShiftLeft("0", 103, "0");
      TestCommon.DoTestShiftRight("-48", 133, "-1");
      TestCommon.DoTestAdd("-9315341018025394", "4855796269744321", "-4459544748281073");
      TestCommon.DoTestSubtract("-1591103958166569046950", "-3", "-1591103958166569046947");
      TestCommon.DoTestMultiply("178728244341421946323105", "5903420113757815756706", "1055107912541771836673753988483744129946492130");
      TestCommon.DoTestDivide("403532933736374324", "752062077380", "536568");
      TestCommon.DoTestRemainder("-569913431019149841463", "-9687758857", "-4870341119");
      Assert.assertEquals("-32364289372572444489035992466",29,BigInteger.fromString("-32364289372572444489035992466").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "2",
        "-4373228701111054",
        "0",
        "2");
      TestCommon.DoTestPow("69722341134687", 9, "38935670027728431022398997751831130368713657700746202072899844233375879624464653778727129082745171242677049845156829962488927");
      TestCommon.DoTestShiftLeft("-7467915944", 148, "-2664641450099012574894879346140845407935791999970443264");
      TestCommon.DoTestShiftRight("-69", 36, "-1");
      TestCommon.DoTestAdd("-50671440727391", "5", "-50671440727386");
      TestCommon.DoTestSubtract("-5672756325282", "-8218578729416832", "8212905973091550");
      TestCommon.DoTestMultiply("-6181305547759983625", "-49943699153009", "308717264650150126969136209477625");
      TestCommon.DoTestDivide("8", "341130793824", "0");
      TestCommon.DoTestRemainder("-71606594", "750013460855411791719", "-71606594");
      Assert.assertEquals("-5573956962349646430660386029992088",34,BigInteger.fromString("-5573956962349646430660386029992088").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-8903",
        "-206687211964",
        "0",
        "-8903");
      TestCommon.DoTestPow("45060813590581554572", 4, "4122836528521330523426429484651778522583519431875873833016966033466413398937856");
      TestCommon.DoTestShiftLeft("-65016317253218", 55, "-2342459697236756278613874049024");
      TestCommon.DoTestShiftRight("0", 23, "0");
      TestCommon.DoTestAdd("-22937887000964250", "396126417", "-22937886604837833");
      TestCommon.DoTestSubtract("49290819", "24145000381160", "-24144951090341");
      TestCommon.DoTestMultiply("34943092", "-6346585439147371582602746", "-221769318885987006769073352930632");
      TestCommon.DoTestDivide("-87", "91135087562549738160327", "0");
      TestCommon.DoTestRemainder("83", "-51585621505403088610773", "83");
      Assert.assertEquals("-49814678981791067720540226214369",32,BigInteger.fromString("-49814678981791067720540226214369").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-488",
        "-760230568576591264292311",
        "0",
        "-488");
      TestCommon.DoTestPow("-7", 3, "-343");
      TestCommon.DoTestShiftLeft("-23659894434947260767", 185, "-1160277847005258759737599069735018537621461165971573942606887491073940127744");
      TestCommon.DoTestShiftRight("-6", 191, "-1");
      TestCommon.DoTestAdd("-872476061", "23754203694441414", "23754202821965353");
      TestCommon.DoTestSubtract("1181543953045636326", "-948766597115480", "1182492719642751806");
      TestCommon.DoTestMultiply("8792164221674402659355", "-27290", "-239938161609494448573797950");
      TestCommon.DoTestDivide("-8", "490110", "0");
      TestCommon.DoTestRemainder("-32040939155736378632", "81069163926133725940", "-32040939155736378632");
      Assert.assertEquals("31786583417994378569476340669328",32,BigInteger.fromString("31786583417994378569476340669328").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-8135492335273667898569",
        "58898664670957716",
        "-138126",
        "-55378932962418353");
      TestCommon.DoTestPow("7150", 5, "18686596544687500000");
      TestCommon.DoTestShiftLeft("9646529521393", 136, "840331237916753339142080478467441732034651980717621248");
      TestCommon.DoTestShiftRight("-6009907", 187, "-1");
      TestCommon.DoTestAdd("-51033283577", "-4719", "-51033288296");
      TestCommon.DoTestSubtract("40443", "-7066167476611873", "7066167476652316");
      TestCommon.DoTestMultiply("-386050906274107240382", "-90177606", "34813146521929370724915285492");
      TestCommon.DoTestDivide("47113327453589978759", "265267352370", "177606957");
      TestCommon.DoTestRemainder("-2563998802456163354608", "-819317118", "-82509478");
      Assert.assertEquals("714666605282148399581892",24,BigInteger.fromString("714666605282148399581892").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "8688611",
        "-7334525345674899816342307",
        "0",
        "8688611");
      TestCommon.DoTestPow("-7742291532871256263", 9, "-99959870374553629864365333917130501226912157998120952061812594992870799058775459159210553139199565969404311741645875852583762021172303231783541016762219211402052155055623");
      TestCommon.DoTestShiftLeft("-29082719976353260052", 147, "-5188530622982964815156323099040240230323993585850459648537133056");
      TestCommon.DoTestShiftRight("-682211", 188, "-1");
      TestCommon.DoTestAdd("-6845951021", "5259940321068316", "5259933475117295");
      TestCommon.DoTestSubtract("-13581102299400966", "31335", "-13581102299432301");
      TestCommon.DoTestMultiply("26790623074660034", "-64666615467597284200", "-1732458920506379266301795736679662800");
      TestCommon.DoTestDivide("979813694096439560", "833531383218271", "1175");
      TestCommon.DoTestRemainder("1567582265707026469998", "-96078440969003864027045", "1567582265707026469998");
      Assert.assertEquals("-8648182228706299099071706246361812",34,BigInteger.fromString("-8648182228706299099071706246361812").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "1",
        "65847421127128047357",
        "0",
        "1");
      TestCommon.DoTestPow("379292533011114149", 9, "162468300276873995897064314648123092273802972559572515203896281194108855142636909123519622546183482956357000376652179512401740615993344301298466020863013017349");
      TestCommon.DoTestShiftLeft("-413126267", 119, "-274569499945257014740898130450931364078288896");
      TestCommon.DoTestShiftRight("1974891274605559", 154, "0");
      TestCommon.DoTestAdd("-5775520998382", "-52876611817", "-5828397610199");
      TestCommon.DoTestSubtract("91884152126876", "-1", "91884152126877");
      TestCommon.DoTestMultiply("572424463646518915337439", "-4359123", "-2495268645244204473782483105997");
      TestCommon.DoTestDivide("-657283362228931128", "-53832176536202", "12209");
      TestCommon.DoTestRemainder("209222335787312", "6623837338205318709", "209222335787312");
      Assert.assertEquals("109816316242855734506307792130998",33,BigInteger.fromString("109816316242855734506307792130998").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-7973216359739201810541779",
        "-2487828954678317292565989",
        "3",
        "-509729495704249932843812");
      TestCommon.DoTestPow("277222191884", 0, "1");
      TestCommon.DoTestShiftLeft("837864839", 20, "878564961419264");
      TestCommon.DoTestShiftRight("551419", 30, "0");
      TestCommon.DoTestAdd("72617810158386243855311", "-8296084", "72617810158386235559227");
      TestCommon.DoTestSubtract("863455587165896086011", "-38090500361930702", "863493677666258016713");
      TestCommon.DoTestMultiply("-649936255586264", "-1835108513654", "1192703555958755183418848656");
      TestCommon.DoTestDivide("878948573", "-2729093602312", "0");
      TestCommon.DoTestRemainder("331571045", "411551504701225", "331571045");
      Assert.assertEquals("-2535074714056093968530986401",28,BigInteger.fromString("-2535074714056093968530986401").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "2467500717",
        "554553820000002981",
        "0",
        "2467500717");
      TestCommon.DoTestPow("6491284354590546", 9, "20463301671271597365317758241131533688053703607245372853055136940319176701440436432947698346257997443581449869323221131477970296781721266541056");
      TestCommon.DoTestShiftLeft("-9152238809373122949734851", 146, "-816406982735733194882711048471542623688800222810671836220791994712064");
      TestCommon.DoTestShiftRight("-27730009671167262693228", 75, "-1");
      TestCommon.DoTestAdd("981969006552933", "-488407991838", "981480598561095");
      TestCommon.DoTestSubtract("-5138263341198289387825", "-589725446691", "-5138263340608563941134");
      TestCommon.DoTestMultiply("6", "3595729", "21574374");
      TestCommon.DoTestDivide("1702563592870805008", "5486435424", "310322360");
      TestCommon.DoTestRemainder("2847", "-2735035312646", "2847");
      Assert.assertEquals("15780907419932139705091",23,BigInteger.fromString("15780907419932139705091").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-62933093349221924",
        "7520013635512324",
        "-8",
        "-2772984265123332");
      TestCommon.DoTestPow("160689912935834161784", 0, "1");
      TestCommon.DoTestShiftLeft("42", 169, "31428131209163736353052038642730950054681173404155904");
      TestCommon.DoTestShiftRight("-506015203345992134956", 199, "-1");
      TestCommon.DoTestAdd("-30341664703258392", "9357275727952088", "-20984388975306304");
      TestCommon.DoTestSubtract("-3527260524358847168442795", "-596215933130211", "-3527260523762631235312584");
      TestCommon.DoTestMultiply("-590823692699967258122007", "-644478072737", "380772914798632434497473281366423159");
      TestCommon.DoTestDivide("828999366", "8160740378", "0");
      TestCommon.DoTestRemainder("-852637700", "1145971196434667454566941", "-852637700");
      Assert.assertEquals("5923758091701971454609586040941881666000",40,BigInteger.fromString("5923758091701971454609586040941881666000").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-971129",
        "8",
        "-121391",
        "-1");
      TestCommon.DoTestPow("483021532676835275101", 0, "1");
      TestCommon.DoTestShiftLeft("892", 28, "239444426752");
      TestCommon.DoTestShiftRight("-531", 122, "-1");
      TestCommon.DoTestAdd("1809", "-931524800", "-931522991");
      TestCommon.DoTestSubtract("-405168064338216451566", "79", "-405168064338216451645");
      TestCommon.DoTestMultiply("8078112689277848", "142957", "1154822755721093316536");
      TestCommon.DoTestDivide("63498", "-48889978", "0");
      TestCommon.DoTestRemainder("-3857047976361402549", "28184175453204612", "-24000114725575317");
      Assert.assertEquals("-130674220858722863721",21,BigInteger.fromString("-130674220858722863721").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "82",
        "6227270048529750898903",
        "0",
        "82");
      TestCommon.DoTestPow("-82718993360230296", 6, "320354953811471967529305919699358378842003861933967406551547519793989201176042327751416831802450640896");
      TestCommon.DoTestShiftLeft("-3423287", 125, "-145610525376209833721768158718909438161321984");
      TestCommon.DoTestShiftRight("70745567529714182178", 136, "0");
      TestCommon.DoTestAdd("6050891", "3175702044243277284", "3175702044249328175");
      TestCommon.DoTestSubtract("751627364748630693535", "-685438090128", "751627365434068783663");
      TestCommon.DoTestMultiply("69026380", "7825510495297158", "540166661142369841028040");
      TestCommon.DoTestDivide("29375547719183623953012", "-863215396", "-34030379735237");
      TestCommon.DoTestRemainder("2219994645351", "-6882979476740684974", "2219994645351");
      Assert.assertEquals("-100792883962849552789190930667314790",36,BigInteger.fromString("-100792883962849552789190930667314790").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "631507828885",
        "-78364",
        "-8058647",
        "15377");
      TestCommon.DoTestPow("-85", 9, "-231616946283203125");
      TestCommon.DoTestShiftLeft("-57006866200808070437", 1, "-114013732401616140874");
      TestCommon.DoTestShiftRight("844034789995934", 14, "51515795287");
      TestCommon.DoTestAdd("37811984", "766949381", "804761365");
      TestCommon.DoTestSubtract("2565386812", "91339174", "2474047638");
      TestCommon.DoTestMultiply("45059", "435779953783513814450616", "19635808937531348965330306344");
      TestCommon.DoTestDivide("-3442846326594069136", "4967", "-693144015823247");
      TestCommon.DoTestRemainder("15740592263754731096678", "-352975329966", "244730968352");
      Assert.assertEquals("-4804333180012161279394155",25,BigInteger.fromString("-4804333180012161279394155").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "7",
        "7704500957244489825969",
        "0",
        "7");
      TestCommon.DoTestPow("51491969", 2, "2651422871496961");
      TestCommon.DoTestShiftLeft("19468552677", 96, "1542457655410872020342421812231087849472");
      TestCommon.DoTestShiftRight("3483371670219857", 118, "0");
      TestCommon.DoTestAdd("829967662869076249270299", "820068167", "829967662869077069338466");
      TestCommon.DoTestSubtract("-5816619", "5063431790", "-5069248409");
      TestCommon.DoTestMultiply("-57521329090", "-991", "57003637128190");
      TestCommon.DoTestDivide("-37863918094", "-5455875843095034650", "0");
      TestCommon.DoTestRemainder("820066064336506985350188", "246580357343369518456970", "80324992306398429979278");
      Assert.assertEquals("3552462138337078525266861589638",31,BigInteger.fromString("3552462138337078525266861589638").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "962891",
        "7865301867998830540",
        "0",
        "962891");
      TestCommon.DoTestPow("-7", 0, "1");
      TestCommon.DoTestShiftLeft("-1859856389554819575986", 175, "-89069425738865390986416748800313709628939508364424212341304952179075842048");
      TestCommon.DoTestShiftRight("-70767327522937599", 79, "-1");
      TestCommon.DoTestAdd("-9298779257694211467581619", "-83678", "-9298779257694211467665297");
      TestCommon.DoTestSubtract("46", "-3999542951505653957", "3999542951505654003");
      TestCommon.DoTestMultiply("592373083724489", "87454170993", "51805496955692166307547577");
      TestCommon.DoTestDivide("380833886", "-444107279171271357", "0");
      TestCommon.DoTestRemainder("5", "-714839756", "5");
      Assert.assertEquals("-257403792",9,BigInteger.fromString("-257403792").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-748099975526882834456741",
        "107717897",
        "-6944992395524420",
        "-99912001");
      TestCommon.DoTestPow("1420711529715826", 7, "11682649163945956285857495859344188461133037546802214199820445273723714745500419069832785978430720584475776");
      TestCommon.DoTestShiftLeft("849099", 171, "2541485217292354226060965043762305424807593300599559421952");
      TestCommon.DoTestShiftRight("216", 62, "0");
      TestCommon.DoTestAdd("-645", "1881", "1236");
      TestCommon.DoTestSubtract("-735625220005213681115076", "-396391287250468007642372", "-339233932754745673472704");
      TestCommon.DoTestMultiply("1434646246395897113", "56807660733720002", "81498897238162995365175702542154226");
      TestCommon.DoTestDivide("1", "20", "0");
      TestCommon.DoTestRemainder("-5524931926044999560", "-6599141848", "-4852192320");
      Assert.assertEquals("148565998051230864",18,BigInteger.fromString("148565998051230864").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "620299",
        "-34483",
        "-17",
        "34088");
      TestCommon.DoTestPow("-522825965554673551", 2, "273346990258176694430766178178949601");
      TestCommon.DoTestShiftLeft("31162330890585059905", 33, "267682384084386773196351733760");
      TestCommon.DoTestShiftRight("8387993339547794194955", 183, "0");
      TestCommon.DoTestAdd("-3714621390", "6628", "-3714614762");
      TestCommon.DoTestSubtract("124196396", "1", "124196395");
      TestCommon.DoTestMultiply("297716500", "-368345", "-109662384192500");
      TestCommon.DoTestDivide("-364379494595898837", "-43869665237002", "8305");
      TestCommon.DoTestRemainder("-333581", "646435187905725934964603", "-333581");
      Assert.assertEquals("-58605188558057171052020915830032882725807",41,BigInteger.fromString("-58605188558057171052020915830032882725807").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-1661968768726098245",
        "2886578861923730347573751",
        "0",
        "-1661968768726098245");
      TestCommon.DoTestPow("-71745680784747440556326", 2, "5147442711266878117774919803064408920378618276");
      TestCommon.DoTestShiftLeft("341203299554072833350", 17, "44722198879151434412851200");
      TestCommon.DoTestShiftRight("729565380536512930", 117, "0");
      TestCommon.DoTestAdd("-911854564869", "3164399307825547", "3163487453260678");
      TestCommon.DoTestSubtract("1584194", "-17132", "1601326");
      TestCommon.DoTestMultiply("2", "-3762", "-7524");
      TestCommon.DoTestDivide("9415743084600564358", "-318179972497460393555", "0");
      TestCommon.DoTestRemainder("24545025060", "-686055299619232051313", "24545025060");
      Assert.assertEquals("157491520336",12,BigInteger.fromString("157491520336").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-4087",
        "-43901437",
        "0",
        "-4087");
      TestCommon.DoTestPow("833391770111077646924", 1, "833391770111077646924");
      TestCommon.DoTestShiftLeft("4788037730930311563160283", 102, "24278235614116875987603714041350242511922210570221125632");
      TestCommon.DoTestShiftRight("7066538939074577402586816", 142, "0");
      TestCommon.DoTestAdd("-1270351532", "7908040042026", "7906769690494");
      TestCommon.DoTestSubtract("2", "3", "-1");
      TestCommon.DoTestMultiply("742683371276", "7969916332531", "5919124330631776949779556");
      TestCommon.DoTestDivide("-5", "513251235288304844624029", "0");
      TestCommon.DoTestRemainder("40043644916", "67", "2");
      Assert.assertEquals("-8398529585734166541",19,BigInteger.fromString("-8398529585734166541").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-6069297738768908925213",
        "186",
        "-32630633004133918952",
        "-141");
      TestCommon.DoTestPow("49337161518", 4, "5925113030570194468834573988323450697576976");
      TestCommon.DoTestShiftLeft("36892790604930587958", 84, "713610353918985630838287016066997593181257728");
      TestCommon.DoTestShiftRight("-6699133215312626793541280", 1, "-3349566607656313396770640");
      TestCommon.DoTestAdd("-29888210551", "85171", "-29888125380");
      TestCommon.DoTestSubtract("-95464116691727463", "-9593541", "-95464116682133922");
      TestCommon.DoTestMultiply("-852269067272301737", "1416305096787449360683", "-1207073023812046501916222473474520406371");
      TestCommon.DoTestDivide("-160352600991403582422080", "90922770544064", "-1763613229");
      TestCommon.DoTestRemainder("-1444734435806253811328", "-6128", "-4096");
      Assert.assertEquals("238",3,BigInteger.fromString("238").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-1327",
        "-302660659458139668037",
        "0",
        "-1327");
      TestCommon.DoTestPow("8029339", 7, "2151585258181269805545466780648804445542777097779");
      TestCommon.DoTestShiftLeft("171060576349273", 171, "512010879830487894350806359565653259261291441649471162898138005504");
      TestCommon.DoTestShiftRight("-32386", 128, "-1");
      TestCommon.DoTestAdd("6705780031", "-13579484428943573498", "-13579484422237793467");
      TestCommon.DoTestSubtract("6127404765917960364", "-6140747874", "6127404772058708238");
      TestCommon.DoTestMultiply("-18", "-56", "1008");
      TestCommon.DoTestDivide("-509105765", "-26280839059191263", "0");
      TestCommon.DoTestRemainder("-113517932601874635", "893588928", "-820079115");
      Assert.assertEquals("50333754117099065580",20,BigInteger.fromString("50333754117099065580").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "878293042931",
        "-9985284671760",
        "0",
        "878293042931");
      TestCommon.DoTestPow("-259178810160006111547970", 3, "-17409988141825190999249878809839161601914679228439563802109025819573000");
      TestCommon.DoTestShiftLeft("-63615445740515664666", 124, "-1352950903082075205338578437346115354894387391874367225856");
      TestCommon.DoTestShiftRight("-908947630", 72, "-1");
      TestCommon.DoTestAdd("-1", "-425193", "-425194");
      TestCommon.DoTestSubtract("449470025824687541", "-58672517155411728563638", "58672966625437553251179");
      TestCommon.DoTestMultiply("-434452541", "320462710859393844", "-139225839028611949245557604");
      TestCommon.DoTestDivide("52399711", "-2046115336456482", "0");
      TestCommon.DoTestRemainder("2541136460", "367533412420011159939", "2541136460");
      Assert.assertEquals("-405286581494821113923671802246",30,BigInteger.fromString("-405286581494821113923671802246").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "38544",
        "209415200378756797",
        "0",
        "38544");
      TestCommon.DoTestPow("0", 4, "0");
      TestCommon.DoTestShiftLeft("53775475750", 111, "139609116901470401834235856743719644430336000");
      TestCommon.DoTestShiftRight("-23099", 137, "-1");
      TestCommon.DoTestAdd("485139", "4", "485143");
      TestCommon.DoTestSubtract("2731649425950", "-5", "2731649425955");
      TestCommon.DoTestMultiply("44623036", "-86006651447197100", "-3837877903767728292395600");
      TestCommon.DoTestDivide("1", "-6623634196183253922", "0");
      TestCommon.DoTestRemainder("3756", "-3252", "504");
      Assert.assertEquals("-12982729486842456009329573",26,BigInteger.fromString("-12982729486842456009329573").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-880778397845576190027646",
        "-941568249569602587208",
        "935",
        "-412084497997770988166");
      TestCommon.DoTestPow("162258078", 7, "2961040115722225424935172344536037450933311685001368278912");
      TestCommon.DoTestShiftLeft("-8790314316205", 89, "-5440941024966829174001645039221955624960");
      TestCommon.DoTestShiftRight("37255030879", 39, "0");
      TestCommon.DoTestAdd("724", "-109098905060", "-109098904336");
      TestCommon.DoTestSubtract("-6182550426020541626684394", "-6609", "-6182550426020541626677785");
      TestCommon.DoTestMultiply("9664205", "6702212688008456836939", "64771557370514768605830068495");
      TestCommon.DoTestDivide("52412", "45457145928171", "0");
      TestCommon.DoTestRemainder("-823520", "-5911873500477557", "-823520");
      Assert.assertEquals("50314525256",11,BigInteger.fromString("50314525256").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "701033662717998310096",
        "27459387940800171",
        "25529",
        "22947977310744637");
      TestCommon.DoTestPow("53483853200416751866871", 4, "8182589277158340126678110269020031369506982814275980867189485988104172813437570201697470881");
      TestCommon.DoTestShiftLeft("6446", 164, "150733432867760003371855238907026565515234258752372736");
      TestCommon.DoTestShiftRight("9683558887991333", 157, "0");
      TestCommon.DoTestAdd("3383956", "-4924010", "-1540054");
      TestCommon.DoTestSubtract("-76691282914461469696", "620524247129058961718534", "-620600938411973423188230");
      TestCommon.DoTestMultiply("-1940", "-1324648", "2569817120");
      TestCommon.DoTestDivide("-31315411584", "-6397385978", "4");
      TestCommon.DoTestRemainder("-39209391", "-92691796681", "-39209391");
      Assert.assertEquals("827800322326974070373376",24,BigInteger.fromString("827800322326974070373376").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-467199",
        "4",
        "-116799",
        "-3");
      TestCommon.DoTestPow("-96118530196", 3, "-888017170753607782458677552969536");
      TestCommon.DoTestShiftLeft("-581274931005037", 11, "-1190451058698315776");
      TestCommon.DoTestShiftRight("-21900648158205032667863", 105, "-1");
      TestCommon.DoTestAdd("1738", "562772873", "562774611");
      TestCommon.DoTestSubtract("93579761", "7987047828934326163992", "-7987047828934232584231");
      TestCommon.DoTestMultiply("49", "-230543204", "-11296616996");
      TestCommon.DoTestDivide("-38571443", "55104446908512911334636", "0");
      TestCommon.DoTestRemainder("-12060887857872925", "-19", "-1");
      Assert.assertEquals("-577765352701574",15,BigInteger.fromString("-577765352701574").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-2272025975312565498031539",
        "521792650859009544",
        "-4354269",
        "-411249356869888203");
      TestCommon.DoTestPow("196205882004563785219733", 1, "196205882004563785219733");
      TestCommon.DoTestShiftLeft("812865", 186, "79725567220860847798365296398370308770703768099441522098831360");
      TestCommon.DoTestShiftRight("71", 117, "0");
      TestCommon.DoTestAdd("3", "-755844973144306343606197", "-755844973144306343606194");
      TestCommon.DoTestSubtract("2081", "8621027740871", "-8621027738790");
      TestCommon.DoTestMultiply("-73703717115415693", "90709204690331164764", "-6685605562260506524859649568734241452");
      TestCommon.DoTestDivide("-16741", "874236345152100399808", "0");
      TestCommon.DoTestRemainder("46163339317597340", "-82972", "8892");
      Assert.assertEquals("87827732489391124791173330073576",32,BigInteger.fromString("87827732489391124791173330073576").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-6266824",
        "-6163212299724701",
        "0",
        "-6266824");
      TestCommon.DoTestPow("-579232708566438", 1, "-579232708566438");
      TestCommon.DoTestShiftLeft("1", 85, "38685626227668133590597632");
      TestCommon.DoTestShiftRight("-908199", 3, "-113525");
      TestCommon.DoTestAdd("-34", "481595941336841556651960", "481595941336841556651926");
      TestCommon.DoTestSubtract("230989304177905477012", "-97896556739018553", "231087200734644495565");
      TestCommon.DoTestMultiply("-4546225878217590696983", "-8075112859865", "36711287053045920021864411757287295");
      TestCommon.DoTestDivide("117133218092257", "38619885696842025893327", "0");
      TestCommon.DoTestRemainder("16798109", "9779758916055075", "16798109");
      Assert.assertEquals("54075018752706632524711127118736269660",38,BigInteger.fromString("54075018752706632524711127118736269660").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-227",
        "-667",
        "0",
        "-227");
      TestCommon.DoTestPow("60912816908152306230", 7, "3111435390019359040499066178774827424967808391752143555511089226930028435333207364069427166818060891314084065720981005396591229292470000000");
      TestCommon.DoTestShiftLeft("-81364993913223272635572", 35, "-2795679903172264143326987730026496");
      TestCommon.DoTestShiftRight("281914776870108", 108, "0");
      TestCommon.DoTestAdd("-3312157715", "47898969548", "44586811833");
      TestCommon.DoTestSubtract("-69497676801529", "3237804257213530", "-3307301934015059");
      TestCommon.DoTestMultiply("4872436703", "4719930844823664859603769", "22997564283940622224904746112733607");
      TestCommon.DoTestDivide("-43277226672313128749429", "1198", "-36124563165536835350");
      TestCommon.DoTestRemainder("438061160699", "-541374", "267989");
      Assert.assertEquals("-163349886693908904901738345332203649",36,BigInteger.fromString("-163349886693908904901738345332203649").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "56700",
        "8673476",
        "0",
        "56700");
      TestCommon.DoTestPow("4300440349267", 2, "18493787197603676947437289");
      TestCommon.DoTestShiftLeft("266784481", 8, "68296827136");
      TestCommon.DoTestShiftRight("31257688", 184, "0");
      TestCommon.DoTestAdd("887519644932553218", "-9693720", "887519644922859498");
      TestCommon.DoTestSubtract("-5029676071468980685668808", "149297053087370614284176", "-5178973124556351299952984");
      TestCommon.DoTestMultiply("-832701821912154637493634", "3134451537", "-2610063505555253382473598919015458");
      TestCommon.DoTestDivide("-51821471313005687909", "-18408235581364446554009", "0");
      TestCommon.DoTestRemainder("-8304215", "2988", "-563");
      Assert.assertEquals("28316137611069961648583992",26,BigInteger.fromString("28316137611069961648583992").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-334277380481032167257",
        "-320157506765261",
        "1044102",
        "-287352409626635");
      TestCommon.DoTestPow("-22406669694276149", 7, "-2835575300055759928426723707800860311053818452355198956637683922730817480287723870611746003164427164061876736535549");
      TestCommon.DoTestShiftLeft("-638791724794603961", 23, "-5358573372945813144076288");
      TestCommon.DoTestShiftRight("-653952589830", 27, "-4873");
      TestCommon.DoTestAdd("-9678877929", "-37157433003", "-46836310932");
      TestCommon.DoTestSubtract("3209", "-6467651495", "6467654704");
      TestCommon.DoTestMultiply("38485128", "791916437690", "30477005469803674320");
      TestCommon.DoTestDivide("83", "-11927648", "0");
      TestCommon.DoTestRemainder("71638", "5076669367758486823", "71638");
      Assert.assertEquals("1211935033300000",16,BigInteger.fromString("1211935033300000").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-845532391940830",
        "31727248376855",
        "-26",
        "-20623934142600");
      TestCommon.DoTestPow("-98287393977994", 1, "-98287393977994");
      TestCommon.DoTestShiftLeft("327509181965", 153, "3739493794396500943404063490715529067991675647728843489280");
      TestCommon.DoTestShiftRight("7360290536303412543068362", 18, "28077280183042192623");
      TestCommon.DoTestAdd("-2324369759385439625868436", "-73793728", "-2324369759385439699662164");
      TestCommon.DoTestSubtract("-30652699617025101", "1235445", "-30652699618260546");
      TestCommon.DoTestMultiply("280053556861445", "-272416899311", "-76291321601211675742964395");
      TestCommon.DoTestDivide("568545506", "661821880573549416946272", "0");
      TestCommon.DoTestRemainder("-5476166", "43750671", "-5476166");
      Assert.assertEquals("-68889595024952565778590",23,BigInteger.fromString("-68889595024952565778590").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "3812573036",
        "-153885983986283",
        "0",
        "3812573036");
      TestCommon.DoTestPow("569559212420011787082", 2, "324397696452504109138681300055815302074724");
      TestCommon.DoTestShiftLeft("898", 120, "1193646740214854453867618740131749429248");
      TestCommon.DoTestShiftRight("-99001", 95, "-1");
      TestCommon.DoTestAdd("-5215950230212856654227", "4301588729", "-5215950230208555065498");
      TestCommon.DoTestSubtract("51", "-10548748461264025", "10548748461264076");
      TestCommon.DoTestMultiply("-3760380644947391", "4", "-15041522579789564");
      TestCommon.DoTestDivide("-14003113642005445935", "340472850418814711", "-41");
      TestCommon.DoTestRemainder("7839431", "-44303801645", "7839431");
      Assert.assertEquals("127900433076656872689415017",27,BigInteger.fromString("127900433076656872689415017").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-47299372711938832421183",
        "997224111",
        "-47431036003038",
        "-269571965");
      TestCommon.DoTestPow("-4756338793037222458113", 2, "22622758714150782091988744466605974039520769");
      TestCommon.DoTestShiftLeft("-669", 133, "-7284764911043450625823923595899293870850048");
      TestCommon.DoTestShiftRight("-853319021", 46, "-1");
      TestCommon.DoTestAdd("1148897495380221540", "928845857798", "1148898424226079338");
      TestCommon.DoTestSubtract("67334241925988256924", "2519019989057079937414266", "-2518952654815153949157342");
      TestCommon.DoTestMultiply("-70097848246703754601683", "-2029278392041", "142248048775605026216580732672405003");
      TestCommon.DoTestDivide("130", "876023519", "0");
      TestCommon.DoTestRemainder("-616793928557", "-5639376732", "-2101864769");
      Assert.assertEquals("-402716253684394463870919675219228",33,BigInteger.fromString("-402716253684394463870919675219228").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-974",
        "-93946656157",
        "0",
        "-974");
      TestCommon.DoTestPow("3322992982593567466415", 8, "14867412567965250052046884629301623049625128359603007400611720367509300090847310355177368536385791384867951239050988710053471811263065643061489950713462160443346918062890625");
      TestCommon.DoTestShiftLeft("43947028450632659396766", 130, "59817595441292417566042068027683378131739649841457950762205184");
      TestCommon.DoTestShiftRight("850939368", 35, "0");
      TestCommon.DoTestAdd("6607440817235", "590009586076839379234", "590009592684280196469");
      TestCommon.DoTestSubtract("-696133", "51454470017183207282669", "-51454470017183207978802");
      TestCommon.DoTestMultiply("-7503107616838", "16169222302", "-121319415012483060321076");
      TestCommon.DoTestDivide("-783238182995970526074772", "-608133036116", "1287938882581");
      TestCommon.DoTestRemainder("-932107320646378272022429", "967544423357", "-55162685694");
      Assert.assertEquals("-2596601421376973482940265153497760",34,BigInteger.fromString("-2596601421376973482940265153497760").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-978083320493",
        "89",
        "-10989700230",
        "-23");
      TestCommon.DoTestPow("-7726465846946677", 7, "-1643865287006115564785641589601001694285311339996148582064968902902110772190750618673047341965776540486520318653");
      TestCommon.DoTestShiftLeft("-911567045", 141, "-2541078050240312309892291433468821402762289705123840");
      TestCommon.DoTestShiftRight("-786111780559", 85, "-1");
      TestCommon.DoTestAdd("-11232367613536889939865", "22552453023263240", "-11232345061083866676625");
      TestCommon.DoTestSubtract("36052893", "-2145579202908882799", "2145579202944935692");
      TestCommon.DoTestMultiply("6209388", "3560177157", "22106521316549916");
      TestCommon.DoTestDivide("37290061", "-81050732484938031732", "0");
      TestCommon.DoTestRemainder("27445656162805", "-8389985446450142593", "27445656162805");
      Assert.assertEquals("3948660592443",13,BigInteger.fromString("3948660592443").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-607986293989548",
        "7082009853054743474987667",
        "0",
        "-607986293989548");
      TestCommon.DoTestPow("1563731189747", 2, "2445255233787568117924009");
      TestCommon.DoTestShiftLeft("1", 12, "4096");
      TestCommon.DoTestShiftRight("4785814132715", 38, "17");
      TestCommon.DoTestAdd("86515", "3137911470794", "3137911557309");
      TestCommon.DoTestSubtract("481472177", "288", "481471889");
      TestCommon.DoTestMultiply("-801804114066596907451698", "-885409234582332276841031", "709924766920670608138483926727784720075657020638");
      TestCommon.DoTestDivide("-37773", "14308653199527458", "0");
      TestCommon.DoTestRemainder("-24712595859481312058636", "9709160129232677008081027", "-24712595859481312058636");
      Assert.assertEquals("255501446306086501",18,BigInteger.fromString("255501446306086501").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "95",
        "413740555",
        "0",
        "95");
      TestCommon.DoTestPow("4792", 8, "278057411212737118421087420416");
      TestCommon.DoTestShiftLeft("-6", 27, "-805306368");
      TestCommon.DoTestShiftRight("-7", 55, "-1");
      TestCommon.DoTestAdd("111754853997270474066", "5", "111754853997270474071");
      TestCommon.DoTestSubtract("-96", "712955583", "-712955679");
      TestCommon.DoTestMultiply("4184534333947752902550", "46240286951474814", "193494068360042630340794207971721375700");
      TestCommon.DoTestDivide("21927812732758887951", "-30263189663365113", "-724");
      TestCommon.DoTestRemainder("27749627", "944947472470513801920", "27749627");
      Assert.assertEquals("-4393817795437420944347837538655923394784",40,BigInteger.fromString("-4393817795437420944347837538655923394784").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-978854",
        "561",
        "-1744",
        "-470");
      TestCommon.DoTestPow("6455", 0, "1");
      TestCommon.DoTestShiftLeft("-9891378318877", 4, "-158262053102032");
      TestCommon.DoTestShiftRight("-3563952352002790", 122, "-1");
      TestCommon.DoTestAdd("-649", "-698392693156898554382047", "-698392693156898554382696");
      TestCommon.DoTestSubtract("-39355406152332014494", "734511201", "-39355406153066525695");
      TestCommon.DoTestMultiply("-675570492633123", "983392294417686996", "-664350816791373937008331275968508");
      TestCommon.DoTestDivide("914724289153057571", "-3015873111", "-303303307");
      TestCommon.DoTestRemainder("95730664483", "-8417556463855131148878204", "95730664483");
      Assert.assertEquals("164260968973144573925656318008",30,BigInteger.fromString("164260968973144573925656318008").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-789543921",
        "-28966020148300907089",
        "0",
        "-789543921");
      TestCommon.DoTestPow("-3760", 3, "-53157376000");
      TestCommon.DoTestShiftLeft("-5459159894358181220", 64, "-100703725428684641284139145827471851520");
      TestCommon.DoTestShiftRight("-95022563826437", 160, "-1");
      TestCommon.DoTestAdd("-344004024191436141759", "477894", "-344004024191435663865");
      TestCommon.DoTestSubtract("-418108469815282981679950", "-6753080", "-418108469815282974926870");
      TestCommon.DoTestMultiply("-2186952388", "-4", "8747809552");
      TestCommon.DoTestDivide("2162101079365324564410", "55", "39310928715733173898");
      TestCommon.DoTestRemainder("621878000229", "-78028097651", "75681316672");
      Assert.assertEquals("943875269004312845000624106540561801672436520",45,BigInteger.fromString("943875269004312845000624106540561801672436520").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-687057619659261",
        "-845",
        "813085940425",
        "-136");
      TestCommon.DoTestPow("-6732230208141751550151602", 6, "93100872145807526349250431887586548937218902359404559127246416802462814481525261149528087109465876776265346075784555849975771081582187411524803507264");
      TestCommon.DoTestShiftLeft("611", 12, "2502656");
      TestCommon.DoTestShiftRight("-383611319453078403802", 18, "-1463361051380457");
      TestCommon.DoTestAdd("-94850884634851", "-3172119", "-94850887806970");
      TestCommon.DoTestSubtract("178165753674585", "21124252081829482210898", "-21124251903663728536313");
      TestCommon.DoTestMultiply("48240392254491", "-3445924368111174848", "-166232743196992112613041414242368");
      TestCommon.DoTestDivide("89", "0", null);
      TestCommon.DoTestRemainder("-7110215548", "6440864712", "-669350836");
      Assert.assertEquals("1500296060277594219277541334047112410187334281946",49,BigInteger.fromString("1500296060277594219277541334047112410187334281946").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "129212",
        "609636519940480793510",
        "0",
        "129212");
      TestCommon.DoTestPow("9578818711458417003232752", 8, "70875417651875509027736512155176993357398910565682429328917364133226073307456558712670381750369212181100968521104853864986973742886563071863058048388812165422142870902436654719967231427639552042336256");
      TestCommon.DoTestShiftLeft("-8105", 79, "-4899171883988284730496778240");
      TestCommon.DoTestShiftRight("90546187", 19, "172");
      TestCommon.DoTestAdd("-737098155123", "751561840443481697", "751561103345326574");
      TestCommon.DoTestSubtract("619", "135017231326841133903", "-135017231326841133284");
      TestCommon.DoTestMultiply("4712971", "-94304000983614918", "-444452021819748583701378");
      TestCommon.DoTestDivide("78373755712", "-2318303153482892234160", "0");
      TestCommon.DoTestRemainder("-83104012126030", "-656440504", "-613641142");
      Assert.assertEquals("695612",6,BigInteger.fromString("695612").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-960573418",
        "985383022562705",
        "0",
        "-960573418");
      TestCommon.DoTestPow("-64640021770973632553068", 8, "304797887252184768185293130980358331186464543462048214988376502958739722667516560353345402512772318787819753332621963989065590132802254559537522632892337712904373704974145575022821376");
      TestCommon.DoTestShiftLeft("52447146006758187412854", 193, "658432142430200884827162867353732142263875085884635099269146618994719168678330368");
      TestCommon.DoTestShiftRight("-5202271579444613544", 65, "-1");
      TestCommon.DoTestAdd("15465661174035", "-29982157363160191363", "-29982141897499017328");
      TestCommon.DoTestSubtract("98209543417703", "776371", "98209542641332");
      TestCommon.DoTestMultiply("36756408685979386", "-747445993533996888829", "-27473430409033495229140522156827678994");
      TestCommon.DoTestDivide("2", "-392", "0");
      TestCommon.DoTestRemainder("-3831", "142259861279921", "-3831");
      Assert.assertEquals("-49702138341630389722585",23,BigInteger.fromString("-49702138341630389722585").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "1539",
        "-24348294709151798311802",
        "0",
        "1539");
      TestCommon.DoTestPow("-27075517499134618557", 3, "-19848619135582322790885662604337537924760225759979476454693");
      TestCommon.DoTestShiftLeft("-7971950808953087777485935", 53, "-71804949385234100524195598145907347947520");
      TestCommon.DoTestShiftRight("73328793939806274", 33, "8536595");
      TestCommon.DoTestAdd("69991944669215294143", "-2", "69991944669215294141");
      TestCommon.DoTestSubtract("425289", "24713628195992639", "-24713628195567350");
      TestCommon.DoTestMultiply("-73606848073811244697", "387249241952887495", "-28504196119124761562078097039156364015");
      TestCommon.DoTestDivide("-99651177093", "-29225403317973323797", "0");
      TestCommon.DoTestRemainder("545808578", "-561292635519", "545808578");
      Assert.assertEquals("1139495290222374",16,BigInteger.fromString("1139495290222374").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "98850278485307943169",
        "941",
        "105048117412654562",
        "327");
      TestCommon.DoTestPow("-7425947239051372975", 7, "-1245268535570331744049193481465681905578210140516008399992995168561249313914013769806723334970145729852847187793612559387445068359375");
      TestCommon.DoTestShiftLeft("-379018789634007651024", 192, "-2379139502155788716329819391458873160817681276429942060030206809115258995605504");
      TestCommon.DoTestShiftRight("-73221480056324", 77, "-1");
      TestCommon.DoTestAdd("96313918593732973969", "418624197753272591247", "514938116347005565216");
      TestCommon.DoTestSubtract("-57738384", "-25846725197829214810", "25846725197771476426");
      TestCommon.DoTestMultiply("41471282", "594039991", "24635599986038462");
      TestCommon.DoTestDivide("7517507801479108248", "196597689399526052845", "0");
      TestCommon.DoTestRemainder("-337457", "6591605991901242773", "-337457");
      Assert.assertEquals("3807038240935871802949892304",28,BigInteger.fromString("3807038240935871802949892304").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "8593",
        "93",
        "92",
        "37");
      TestCommon.DoTestPow("27408293", 8, "318460744973548017283554935645820162598708805066993581989601");
      TestCommon.DoTestShiftLeft("-1", 157, "-182687704666362864775460604089535377456991567872");
      TestCommon.DoTestShiftRight("39067727967706954763819", 10, "38152078093463823011");
      TestCommon.DoTestAdd("73388149", "697554326590064194", "697554326663452343");
      TestCommon.DoTestSubtract("5256976970921901100792465", "-894388979760951581", "5256977865310880861744046");
      TestCommon.DoTestMultiply("51335226326", "49236960328617345212", "2527590502073854751107292451112");
      TestCommon.DoTestDivide("383892", "677861766626", "0");
      TestCommon.DoTestRemainder("6085586377242877203842152", "-942286790770248579", "519822728482109188");
      Assert.assertEquals("-20800209367072998490338415044318",32,BigInteger.fromString("-20800209367072998490338415044318").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-9642608",
        "-233925221453184663",
        "0",
        "-9642608");
      TestCommon.DoTestPow("79972029598783970746", 1, "79972029598783970746");
      TestCommon.DoTestShiftLeft("-3305", 182, "-20259591050247050707497347698927087407439731195267220766720");
      TestCommon.DoTestShiftRight("602291194699922354", 167, "0");
      TestCommon.DoTestAdd("4460573348102397144", "58684502130696053312", "63145075478798450456");
      TestCommon.DoTestSubtract("4779228611323694522356586", "5", "4779228611323694522356581");
      TestCommon.DoTestMultiply("-542", "-7245088163", "3926837784346");
      TestCommon.DoTestDivide("-62356070239984232338", "-87053171867709379287", "0");
      TestCommon.DoTestRemainder("-42", "41657666666", "-42");
      Assert.assertEquals("125128851442386493276790147190368815879176",42,BigInteger.fromString("125128851442386493276790147190368815879176").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-211",
        "63758070",
        "0",
        "-211");
      TestCommon.DoTestPow("737780670", 3, "401589008189795652626763000");
      TestCommon.DoTestShiftLeft("-3390638", 107, "-550162469869650340023293281647317745664");
      TestCommon.DoTestShiftRight("4180", 82, "0");
      TestCommon.DoTestAdd("9271771339215811", "5453255737638556147006607", "5453255746910327486222418");
      TestCommon.DoTestSubtract("2499", "-193310364079952628252820", "193310364079952628255319");
      TestCommon.DoTestMultiply("8", "-73", "-584");
      TestCommon.DoTestDivide("12909626", "4863803345106", "0");
      TestCommon.DoTestRemainder("-3043869186", "-17142242831517533608", "-3043869186");
      Assert.assertEquals("-4246357881821744425201884762134280",34,BigInteger.fromString("-4246357881821744425201884762134280").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-9973305564823759",
        "-944",
        "10564942335618",
        "-367");
      TestCommon.DoTestPow("701629469", 3, "345400899611882055039568709");
      TestCommon.DoTestShiftLeft("323053241067873477307011", 64, "5959280460161458207480752357102531983179776");
      TestCommon.DoTestShiftRight("-955808245016071", 41, "-435");
      TestCommon.DoTestAdd("388166345057402", "-2428454675", "388163916602727");
      TestCommon.DoTestSubtract("-6075074484429077", "-4144632178408", "-6070929852250669");
      TestCommon.DoTestMultiply("15223104", "-33719916239", "-513321791777585856");
      TestCommon.DoTestDivide("680294100013693473543114", "4936", "137822953811526230458");
      TestCommon.DoTestRemainder("-3423", "-346644083261837", "-3423");
      Assert.assertEquals("-17650291046888465379482562747165285295720",41,BigInteger.fromString("-17650291046888465379482562747165285295720").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "54",
        "31822",
        "0",
        "54");
      TestCommon.DoTestPow("-61028", 1, "-61028");
      TestCommon.DoTestShiftLeft("49273153018184673", 184, "1208174196556329991735847802231395134576027532599072827494348472522375168");
      TestCommon.DoTestShiftRight("1550602355441321", 26, "23105775");
      TestCommon.DoTestAdd("-59180382505061022232238", "450458", "-59180382505061021781780");
      TestCommon.DoTestSubtract("61631254125365264732", "11044530181669770453", "50586723943695494279");
      TestCommon.DoTestMultiply("50096290795", "26855383500866433", "1345355101270649962022384235");
      TestCommon.DoTestDivide("-16700504132563851626", "98", "-170413307475141343");
      TestCommon.DoTestRemainder("3489271168024028684647", "6", "1");
      Assert.assertEquals("-66563444",8,BigInteger.fromString("-66563444").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-1789577203139401530973676",
        "5689351132699",
        "-314548559475",
        "-1471512200651");
      TestCommon.DoTestPow("439", 9, "605592770801153705930359");
      TestCommon.DoTestShiftLeft("20", 3, "160");
      TestCommon.DoTestShiftRight("4395519681", 188, "0");
      TestCommon.DoTestAdd("2555160208567370617871", "310448958247349531", "2555470657525617967402");
      TestCommon.DoTestSubtract("3869165878361897081", "32296483627258519788494", "-32292614461380157891413");
      TestCommon.DoTestMultiply("-565972984", "488786920457369414817", "-276640191911428012494311303928");
      TestCommon.DoTestDivide("6", "624673368", "0");
      TestCommon.DoTestRemainder("-46622902428010289", "3551432878917860765398", "-46622902428010289");
      Assert.assertEquals("-5805985610529633003771333774",28,BigInteger.fromString("-5805985610529633003771333774").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-1525817894908152611",
        "321698",
        "-4743013307226",
        "-162863");
      TestCommon.DoTestPow("358627214", 7, "762961628809546595268067739052801188382025722165455107627904");
      TestCommon.DoTestShiftLeft("-719882", 129, "-489926301727558045909882078294392327198736384");
      TestCommon.DoTestShiftRight("601600005901993839120", 140, "0");
      TestCommon.DoTestAdd("87360138775527", "-794142919235997", "-706782780460470");
      TestCommon.DoTestSubtract("-40312001094279867974", "-468302725776863", "-40311532791554091111");
      TestCommon.DoTestMultiply("2921", "-122901014546", "-358993863488866");
      TestCommon.DoTestDivide("-1336867131", "-83475854516", "0");
      TestCommon.DoTestRemainder("-599664667699946", "-37039071369", "-2102235836");
      Assert.assertEquals("-3117837444476850494127454582204320",34,BigInteger.fromString("-3117837444476850494127454582204320").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "956916506271798927810171",
        "8",
        "119614563283974865976271",
        "3");
      TestCommon.DoTestPow("-7728968189416696", 7, "-1647595658684611636649948625417447420435027477975746761496376051495809304908763963590812115537690462810345046016");
      TestCommon.DoTestShiftLeft("387425772", 111, "1005814809435515191435178382945630925357056");
      TestCommon.DoTestShiftRight("632936050049741417211788", 153, "0");
      TestCommon.DoTestAdd("-1223318748923650", "-468470704", "-1223319217394354");
      TestCommon.DoTestSubtract("-8625554711524380", "-1715427560048260", "-6910127151476120");
      TestCommon.DoTestMultiply("-511762016349507", "-2218157331671", "1135168668636393123256336197");
      TestCommon.DoTestDivide("-190694", "4200487", "0");
      TestCommon.DoTestRemainder("7308692355788789", "-7685366053092071322319711", "7308692355788789");
      Assert.assertEquals("2520945737027238943010700244467",31,BigInteger.fromString("2520945737027238943010700244467").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "47250",
        "26331531220650463606314",
        "0",
        "47250");
      TestCommon.DoTestPow("817072530934651211723974", 7, "243122006723684799757872188892653769514304016498650763563481890090350946032838002275868452659694152097022086917209158682595164649300828305980180460795859661092576957824");
      TestCommon.DoTestShiftLeft("-93838055739405638", 5, "-3002817783660980416");
      TestCommon.DoTestShiftRight("409115579", 170, "0");
      TestCommon.DoTestAdd("6168207526427660076", "-7250545", "6168207526420409531");
      TestCommon.DoTestSubtract("-8182288520825331423435", "-986157285691330629958893", "977974997170505298535458");
      TestCommon.DoTestMultiply("32437415294577", "-37675886385", "-1222108373261544358634145");
      TestCommon.DoTestDivide("-74412070669141454", "-7933660238045831", "9");
      TestCommon.DoTestRemainder("8754", "26087647818467809426", "8754");
      Assert.assertEquals("-24336216322629241862461734",26,BigInteger.fromString("-24336216322629241862461734").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-8332179149124952889165",
        "-42295299",
        "197000124035651",
        "-7184516");
      TestCommon.DoTestPow("2223747457733531752784", 6, "120924078781242121837597615266451902514742414565265696883253078110124109332617881234079075066296317860394398218118242587866300416");
      TestCommon.DoTestShiftLeft("7025", 166, "657091136143973952024376700789240845637307271322009600");
      TestCommon.DoTestShiftRight("-4139776638", 137, "-1");
      TestCommon.DoTestAdd("-381565203925781", "648826339512162738465163", "648826339130597534539382");
      TestCommon.DoTestSubtract("62958611", "-1763417", "64722028");
      TestCommon.DoTestMultiply("20480271628579883", "-436", "-8929398430060828988");
      TestCommon.DoTestDivide("21047627673063392542675", "-236615559878571", "-88952846");
      TestCommon.DoTestRemainder("4", "-76", "4");
      Assert.assertEquals("3047637436585553340910318390677316785",37,BigInteger.fromString("3047637436585553340910318390677316785").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "622404",
        "-3936129053949699121282",
        "0",
        "622404");
      TestCommon.DoTestPow("23782587128", 9, "2434063299765404076099211550110151991409064319517053858435321508540541595673463425922716663808");
      TestCommon.DoTestShiftLeft("-905158116964693521399", 175, "-43348461813342421485725365010607763665885337267124171292040178668123717632");
      TestCommon.DoTestShiftRight("97789836267857803", 53, "10");
      TestCommon.DoTestAdd("81049190763415277270", "-29139", "81049190763415248131");
      TestCommon.DoTestSubtract("136099403976550294", "-20416", "136099403976570710");
      TestCommon.DoTestMultiply("-930", "3531", "-3283830");
      TestCommon.DoTestDivide("-643", "-49", "13");
      TestCommon.DoTestRemainder("-5995269", "-505678803005867582287", "-5995269");
      Assert.assertEquals("-21867599647385180",17,BigInteger.fromString("-21867599647385180").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "38066",
        "-95289847728793",
        "0",
        "38066");
      TestCommon.DoTestPow("-77987864740487135950", 4, "36992026128497217783121686573641816974749193554136635336620701307718672006250000");
      TestCommon.DoTestShiftLeft("-6331057", 40, "-6961070787612639232");
      TestCommon.DoTestShiftRight("-370057333295682568093", 112, "-1");
      TestCommon.DoTestAdd("-862125836125830320614532", "-1689", "-862125836125830320616221");
      TestCommon.DoTestSubtract("15704248233159", "-807131159", "15705055364318");
      TestCommon.DoTestMultiply("-6976", "70789896529429812", "-493830318189302368512");
      TestCommon.DoTestDivide("-2358519388", "-53667303073572690228", "0");
      TestCommon.DoTestRemainder("327152827", "3654451137503", "327152827");
      Assert.assertEquals("7055286495522538800069469036313606225182200",43,BigInteger.fromString("7055286495522538800069469036313606225182200").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "69421251121385108",
        "-102907313115739",
        "-674",
        "61722081377022");
      TestCommon.DoTestPow("30128314048702658157107", 0, "1");
      TestCommon.DoTestShiftLeft("8", 119, "5316911983139663491615228241121378304");
      TestCommon.DoTestShiftRight("6646252037208390670828", 38, "24178924057");
      TestCommon.DoTestAdd("969436790973942627574", "776662145677901", "969437567636088305475");
      TestCommon.DoTestSubtract("-480055143722783092767076", "813", "-480055143722783092767889");
      TestCommon.DoTestMultiply("-6133180190818042386026744", "4487693", "-27523829810072793089475516861592");
      TestCommon.DoTestDivide("-928071843616", "-4889413478946921", "0");
      TestCommon.DoTestRemainder("-907805", "-3305647284946536800", "-907805");
      Assert.assertEquals("-603090534270638124779422319401462447",36,BigInteger.fromString("-603090534270638124779422319401462447").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "30",
        "88614024",
        "0",
        "30");
      TestCommon.DoTestPow("43021999973154026", 7, "272793595293558137475270633043247500124404918279450392959179399698673340618422559705588168392184811030388019110338176");
      TestCommon.DoTestShiftLeft("-1330288300160", 46, "-93610717076498539599626240");
      TestCommon.DoTestShiftRight("1986625837105309276", 147, "0");
      TestCommon.DoTestAdd("-63803547809", "-6686", "-63803554495");
      TestCommon.DoTestSubtract("-3350539329286610", "19", "-3350539329286629");
      TestCommon.DoTestMultiply("42161763962381417141024", "36825774757669386152", "1552639623064680389898119497907504896699648");
      TestCommon.DoTestDivide("-1618579139", "-8867997327", "0");
      TestCommon.DoTestRemainder("6962928284", "3305633617146", "6962928284");
      Assert.assertEquals("634139675055569828087852370",27,BigInteger.fromString("634139675055569828087852370").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "7436062085140",
        "-92099906490428021177",
        "0",
        "7436062085140");
      TestCommon.DoTestPow("574114285033760", 4, "108640914386877898149027088633569559316831219626436853760000");
      TestCommon.DoTestShiftLeft("528916982621716026", 185, "25938013355392660455685868930727743725289973294765660767784653415285522432");
      TestCommon.DoTestShiftRight("543", 188, "0");
      TestCommon.DoTestAdd("1919647870040435", "3488", "1919647870043923");
      TestCommon.DoTestSubtract("-86912313135954713", "-668", "-86912313135954045");
      TestCommon.DoTestMultiply("-4532013912377329785251", "9174689091990366292021", "-41579818606636871270240443693281113084782271");
      TestCommon.DoTestDivide("969020829102690301", "-6585815118702494839578640", "0");
      TestCommon.DoTestRemainder("845295", "-1224020", "845295");
      Assert.assertEquals("-35202791754816755798677672",26,BigInteger.fromString("-35202791754816755798677672").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "893532517999",
        "743343717",
        "1202",
        "33370165");
      TestCommon.DoTestPow("9320103448529185", 4, "7545411529496241029966525813180679615505488053032167780239850625");
      TestCommon.DoTestShiftLeft("-6774255114045369964636", 76, "-511848244751618257353148453511796066925674496");
      TestCommon.DoTestShiftRight("811446130", 35, "0");
      TestCommon.DoTestAdd("-374839315626", "-659417130789857", "-659791970105483");
      TestCommon.DoTestSubtract("3", "9358701627104937715", "-9358701627104937712");
      TestCommon.DoTestMultiply("-51308969924", "151691877895055038456", "-7783154000632459396463567397344");
      TestCommon.DoTestDivide("-94458924", "-3908", "24170");
      TestCommon.DoTestRemainder("929587846", "65992908804334368381444", "929587846");
      Assert.assertEquals("-35123656189591056",17,BigInteger.fromString("-35123656189591056").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "8774697517",
        "6160730",
        "1424",
        "1817997");
      TestCommon.DoTestPow("-53", 2, "2809");
      TestCommon.DoTestShiftLeft("-181617413915531", 174, "-4348873077642901397266476662639933253014485857508196648408846434304");
      TestCommon.DoTestShiftRight("93762", 140, "0");
      TestCommon.DoTestAdd("-8150", "428790192307270", "428790192299120");
      TestCommon.DoTestSubtract("-494", "-911241043", "911240549");
      TestCommon.DoTestMultiply("-212586194413", "-64811666", "13778065428506422058");
      TestCommon.DoTestDivide("6592219", "97089168474", "0");
      TestCommon.DoTestRemainder("541440913641287152914", "-46", "2");
      Assert.assertEquals("-11993704197587611776274350287179922",35,BigInteger.fromString("-11993704197587611776274350287179922").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "8845646522",
        "9",
        "982849613",
        "5");
      TestCommon.DoTestPow("-595022", 8, "15713183672420409401998116702045263579222753536");
      TestCommon.DoTestShiftLeft("7032", 69, "4150960138442418142838784");
      TestCommon.DoTestShiftRight("-78875359523341123477651", 167, "-1");
      TestCommon.DoTestAdd("-7996049668634448647", "-1666337546199076315200731", "-1666345542248744949649378");
      TestCommon.DoTestSubtract("-737559123", "69", "-737559192");
      TestCommon.DoTestMultiply("51138620387939732051", "75048652041080", "3837884527355368473205309444655080");
      TestCommon.DoTestDivide("-34", "-3413904850069571433889", "0");
      TestCommon.DoTestRemainder("-717309165431997681765", "-6330108672565667629217", "-717309165431997681765");
      Assert.assertEquals("-827900293396123664444649083471124900",36,BigInteger.fromString("-827900293396123664444649083471124900").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-88937554",
        "-72127765315920630",
        "0",
        "-88937554");
      TestCommon.DoTestPow("972364914163", 0, "1");
      TestCommon.DoTestShiftLeft("720697733373920", 12, "2951977915899576320");
      TestCommon.DoTestShiftRight("9974411148763695701", 48, "35436");
      TestCommon.DoTestAdd("5992013", "-2734227968129660370429", "-2734227968129654378416");
      TestCommon.DoTestSubtract("-2887693170135897045589862", "-596241467964520", "-2887693169539655577625342");
      TestCommon.DoTestMultiply("3270976232281390610379", "90774982", "296922808607771051592122738178");
      TestCommon.DoTestDivide("-1220478792346", "-4997589845657470272", "0");
      TestCommon.DoTestRemainder("12535", "41", "30");
      Assert.assertEquals("1277092377029931636832384702",28,BigInteger.fromString("1277092377029931636832384702").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-395910611",
        "-7180332060732886",
        "0",
        "-395910611");
      TestCommon.DoTestPow("-19988151", 7, "-1274701073488866347893931846749882485767854388164551");
      TestCommon.DoTestShiftLeft("-594227661", 87, "-91952276750349954031105449821995008");
      TestCommon.DoTestShiftRight("27", 2, "6");
      TestCommon.DoTestAdd("-75746557689662927", "141913802586", "-75746415775860341");
      TestCommon.DoTestSubtract("-302999", "246706", "-549705");
      TestCommon.DoTestMultiply("1771111", "-5311727783565423916937", "-9407659506478341518950207007");
      TestCommon.DoTestDivide("-63503412593188408855968", "4323872549590728", "-14686698");
      TestCommon.DoTestRemainder("-65577380973", "-1738526077350874067197903", "-65577380973");
      Assert.assertEquals("-608918591754062859216894656",27,BigInteger.fromString("-608918591754062859216894656").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-737008309284864442808",
        "85151171539897393",
        "-8655",
        "-24919607052506393");
      TestCommon.DoTestPow("-5640128769867963684", 4, "1011943063746686623509388534936324318237055253871162378547911267855962644736");
      TestCommon.DoTestShiftLeft("391890116", 72, "1850648748766297275674170228736");
      TestCommon.DoTestShiftRight("-16594657", 67, "-1");
      TestCommon.DoTestAdd("94113", "-9778", "84335");
      TestCommon.DoTestSubtract("960102693845841", "-6906484671709738403672", "6906485631812432249513");
      TestCommon.DoTestMultiply("553775368912364942347920", "543826149468580", "301157526546153807444632316445468353600");
      TestCommon.DoTestDivide("61158823481869708562", "40224525553228", "1520436");
      TestCommon.DoTestRemainder("8517479", "-2477", "1553");
      Assert.assertEquals("42476283684",11,BigInteger.fromString("42476283684").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "3",
        "895991717804",
        "0",
        "3");
      TestCommon.DoTestPow("-6725655721", 2, "45234444877420029841");
      TestCommon.DoTestShiftLeft("9011366219195489992", 34, "154814092814895187785341206528");
      TestCommon.DoTestShiftRight("96274928112089765", 68, "0");
      TestCommon.DoTestAdd("27678493112249999185033", "10", "27678493112249999185043");
      TestCommon.DoTestSubtract("-89442008408995635008", "26105870298897596894", "-115547878707893231902");
      TestCommon.DoTestMultiply("71149058444745609101", "-50394", "-3585485651264510225035794");
      TestCommon.DoTestDivide("-8558426604031389978884122", "-73", "117238720603169725738138");
      TestCommon.DoTestRemainder("-929985460718", "988495592800185", "-929985460718");
      Assert.assertEquals("761497437194905431692759240289905054787773404449",48,BigInteger.fromString("761497437194905431692759240289905054787773404449").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "4",
        "-92888",
        "0",
        "4");
      TestCommon.DoTestPow("-4", 9, "-262144");
      TestCommon.DoTestShiftLeft("-79356369339397786679463", 101, "-201192298450041329204350730400520455553744295140786176");
      TestCommon.DoTestShiftRight("1", 48, "0");
      TestCommon.DoTestAdd("9", "58255365658976", "58255365658985");
      TestCommon.DoTestSubtract("-80756256980", "-5322197211", "-75434059769");
      TestCommon.DoTestMultiply("-87089021380381", "-39979846036", "3481805666213544571019716");
      TestCommon.DoTestDivide("-5179113098915146", "9161763405215018", "0");
      TestCommon.DoTestRemainder("710014882634702614909269", "-965066078", "329448981");
      Assert.assertEquals("27636117741181754145852",23,BigInteger.fromString("27636117741181754145852").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-3",
        "-73318622",
        "0",
        "-3");
      TestCommon.DoTestPow("-421558644", 3, "-74915899198934325351153984");
      TestCommon.DoTestShiftLeft("918059865560116921", 109, "595854919486837659970934728868128780946450312855552");
      TestCommon.DoTestShiftRight("67624", 62, "0");
      TestCommon.DoTestAdd("43419", "24052021", "24095440");
      TestCommon.DoTestSubtract("846836429762481733311", "-43288068517152045827", "890124498279633779138");
      TestCommon.DoTestMultiply("94427075441700348306", "-51169591223450385", "-4831794850777717529247550729609797810");
      TestCommon.DoTestDivide("87406647073977931967", "476621073361045416", "183");
      TestCommon.DoTestRemainder("2", "-1444663559123160637897", "2");
      Assert.assertEquals("189977375543110541308963676631",30,BigInteger.fromString("189977375543110541308963676631").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "7610794734224",
        "-9",
        "-845643859358",
        "2");
      TestCommon.DoTestPow("-884", 0, "1");
      TestCommon.DoTestShiftLeft("734275061810715", 120, "976018968765501920059079248220790631518598688931840");
      TestCommon.DoTestShiftRight("-3", 103, "-1");
      TestCommon.DoTestAdd("-654404303555627888589242", "-650102129586219665390", "-655054405685214108254632");
      TestCommon.DoTestSubtract("-6792652437130226", "7115", "-6792652437137341");
      TestCommon.DoTestMultiply("-388939058431130666575831", "-174180953719302694", "67745776136221936903039192280953993588714");
      TestCommon.DoTestDivide("-893715293", "197136659694403", "0");
      TestCommon.DoTestRemainder("92240703", "4578370438241683737238", "92240703");
      Assert.assertEquals("-68664652374827165626795",23,BigInteger.fromString("-68664652374827165626795").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "8985055624428449",
        "-9240448270550170249090439",
        "0",
        "8985055624428449");
      TestCommon.DoTestPow("6940832334", 1, "6940832334");
      TestCommon.DoTestShiftLeft("6029172", 57, "868895256721684099497984");
      TestCommon.DoTestShiftRight("226360894508545314043", 79, "0");
      TestCommon.DoTestAdd("-40264", "-77356", "-117620");
      TestCommon.DoTestSubtract("-8318924421", "1640842476593", "-1649161401014");
      TestCommon.DoTestMultiply("2473667019765701", "93308053503661952163", "230813054630542036666576272530161263");
      TestCommon.DoTestDivide("-53930625516573108798", "272684723584166667328", "0");
      TestCommon.DoTestRemainder("-575094", "-7798198627671134448062", "-575094");
      Assert.assertEquals("-4583749475497899889096200",25,BigInteger.fromString("-4583749475497899889096200").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "4385793826",
        "73503067427907186016777",
        "0",
        "4385793826");
      TestCommon.DoTestPow("-270707957218747230608757", 6, "393555630339951506029350431798098085064873093960964638035405340637269768917762225303508629056376964450844408300091018301263116937204102372649");
      TestCommon.DoTestShiftLeft("9547499254627154", 100, "12102893160806684585066175318853032191568379904");
      TestCommon.DoTestShiftRight("-6512274119899758222865", 126, "-1");
      TestCommon.DoTestAdd("7026125", "3193217643", "3200243768");
      TestCommon.DoTestSubtract("-6", "3359224719061368187", "-3359224719061368193");
      TestCommon.DoTestMultiply("3358893677672946485", "1", "3358893677672946485");
      TestCommon.DoTestDivide("-11132731696439914434", "-9900203098265", "1124495");
      TestCommon.DoTestRemainder("-771575035988757", "-265492", "-58613");
      Assert.assertEquals("-5180520926005373784",19,BigInteger.fromString("-5180520926005373784").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "6622443",
        "-9784829",
        "0",
        "6622443");
      TestCommon.DoTestPow("-9219360270238938372084088", 1, "-9219360270238938372084088");
      TestCommon.DoTestShiftLeft("253889519", 170, "379965386464927114996152203474874940752191753044606431789056");
      TestCommon.DoTestShiftRight("124322843388", 139, "0");
      TestCommon.DoTestAdd("-20630262542744848986", "-665748318420768109198379", "-665768948683310854047365");
      TestCommon.DoTestSubtract("90351376373353740", "3193338925914253388257815", "-3193338835562877014904075");
      TestCommon.DoTestMultiply("-458007861", "90056730479746", "-41246690495681969283306");
      TestCommon.DoTestDivide("394833", "6005877350961372184", "0");
      TestCommon.DoTestRemainder("-5782693035104", "-352830193", "-159002027");
      Assert.assertEquals("16147092639442617129538",23,BigInteger.fromString("16147092639442617129538").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "76497822472967585",
        "-9719122132083556740588931",
        "0",
        "76497822472967585");
      TestCommon.DoTestPow("496017616", 0, "1");
      TestCommon.DoTestShiftLeft("-6749451", 165, "-315658678002710401029528921531575972585592113859900997632");
      TestCommon.DoTestShiftRight("-3051142672635", 126, "-1");
      TestCommon.DoTestAdd("-61068136313838", "-65875111029680697", "-65936179165994535");
      TestCommon.DoTestSubtract("900684116603779502857309", "62100717521973582", "900684054503061980883727");
      TestCommon.DoTestMultiply("1437906869470261022238416", "-1145322229139737", "-1646866701037020195421087047013793536592");
      TestCommon.DoTestDivide("-67855078", "7794299131", "0");
      TestCommon.DoTestRemainder("-5", "94190546450", "-5");
      Assert.assertEquals("19851568700800140266168",23,BigInteger.fromString("19851568700800140266168").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-1502",
        "-3909218",
        "0",
        "-1502");
      TestCommon.DoTestPow("38815184961546788", 6, "3419872854645054102374695091684308481144048426094617867321863010439315942434190548244014356652560384");
      TestCommon.DoTestShiftLeft("-43773745458394747", 149, "-31237988603295946408978982616811539849104812719243256936792064");
      TestCommon.DoTestShiftRight("-87302190299", 143, "-1");
      TestCommon.DoTestAdd("7926116154247549541017", "18", "7926116154247549541035");
      TestCommon.DoTestSubtract("5247", "1", "5246");
      TestCommon.DoTestMultiply("-8700840", "-679509831831150", "5912306325189743166000");
      TestCommon.DoTestDivide("-413412379174843579", "-5310811587766766", "77");
      TestCommon.DoTestRemainder("-119204905804", "3323154110886588829", "-119204905804");
      Assert.assertEquals("-5215470549874141165360869863184955917490",40,BigInteger.fromString("-5215470549874141165360869863184955917490").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-35334770203",
        "-1984234024123759602",
        "0",
        "-35334770203");
      TestCommon.DoTestPow("-212161969428448979669", 9, "-870979319746949255441165185875863110722932672001761589915076806789825617230734989949442347126261643546796221866674478488588348313681215411214961975889337188989604717267538096538728629");
      TestCommon.DoTestShiftLeft("696730", 58, "200818749976182123397120");
      TestCommon.DoTestShiftRight("5928198975165099696395186", 118, "0");
      TestCommon.DoTestAdd("-4172664185109", "4", "-4172664185105");
      TestCommon.DoTestSubtract("-8602540", "-889", "-8601651");
      TestCommon.DoTestMultiply("-12326181", "981829", "-12102201965049");
      TestCommon.DoTestDivide("83389160958047", "-87031572720518125", "0");
      TestCommon.DoTestRemainder("3973719470", "-213888185", "123732140");
      Assert.assertEquals("-20403919104178107534088258261127063475",38,BigInteger.fromString("-20403919104178107534088258261127063475").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "-130718437952584",
        "6813703455672987505",
        "0",
        "-130718437952584");
      TestCommon.DoTestPow("-395390657516466986511", 8, "597325736173256453066814012924510123952227148301838991950603412809341505462985185163174021847145402364384154570676345362997275336821204256191846774101654502238890881");
      TestCommon.DoTestShiftLeft("-767264970063317772", 42, "-3374467024679289733115478540288");
      TestCommon.DoTestShiftRight("-320", 156, "-1");
      TestCommon.DoTestAdd("-904183195014864922413", "-7581832929918806", "-904190776847794841219");
      TestCommon.DoTestSubtract("-295248", "863", "-296111");
      TestCommon.DoTestMultiply("51", "-5372", "-273972");
      TestCommon.DoTestDivide("-49891", "-293638040797465389565", "0");
      TestCommon.DoTestRemainder("-28187178633796509280", "-5328723427987", "-835923370964");
      Assert.assertEquals("202905581491606953811941574118088",33,BigInteger.fromString("202905581491606953811941574118088").getDigitCount());
      TestCommon.DoTestDivideAndRemainder(
        "9068160685413784044785",
        "480",
        "18892001427945383426",
        "305");
      TestCommon.DoTestPow("-4925047", 2, "24256087952209");
      TestCommon.DoTestShiftLeft("8748419796523461", 121, "23257289024835923193215707075334463091922071896195072");
      TestCommon.DoTestShiftRight("93495242496778446557328", 71, "39");
    }

    // Test some specific cases
    @Test
    public void TestSpecificCases() {
      TestCommon.DoTestMultiply("39258416159456516340113264558732499166970244380745050", "39258416159456516340113264558732499166970244380745051", "1541223239349076530208308657654362309553698742116222355477449713742236585667505604058123112521437480247550");
      TestCommon.DoTestMultiply(
        "5786426269322750882632312999752639738983363095641642905722171221986067189342123124290107105663618428969517616421742429671402859775667602123564",
        "331378991485809774307751183645559883724387697397707434271522313077548174328632968616330900320595966360728317363190772921",
        "1917500101435169880779183578665955372346028226046021044867189027856189131730889958057717187493786883422516390996639766012958050987359732634213213442579444095928862861132583117668061032227577386757036981448703231972963300147061503108512300577364845823910107210444");
      TestCommon.DoTestDivide("9999999999999999999999", "281474976710655", "35527136");
    }

    @Test
    public void TestToString() {
      FastRandom r = new FastRandom();
      for (int i = 0; i < 1000; ++i) {
        BigInteger bigintA = CBORTest.RandomBigInteger(r);
        String s = bigintA.toString();
        BigInteger big2 = BigInteger.fromString(s);
        Assert.assertEquals(big2.toString(), s);
      }
    }

    @Test
    public void TestMultiply() {
      FastRandom r = new FastRandom();
      for (int i = 0; i < 1000; ++i) {
        BigInteger bigintA = CBORTest.RandomBigInteger(r);
        BigInteger bigintB = bigintA .add(BigInteger.ONE);
        BigInteger bigintC = bigintA.multiply(bigintB);
        // Test near-squaring
        if (bigintA.signum()==0 || bigintB.signum()==0) {
          Assert.assertEquals(BigInteger.ZERO, bigintC);
        }
        if (bigintA.equals(BigInteger.ONE)) {
          Assert.assertEquals(bigintB, bigintC);
        }
        if (bigintB.equals(BigInteger.ONE)) {
          Assert.assertEquals(bigintA, bigintC);
        }
        bigintB = bigintA;
        // Test squaring
        bigintC = bigintA.multiply(bigintB);
        if (bigintA.signum()==0 || bigintB.signum()==0) {
          Assert.assertEquals(BigInteger.ZERO, bigintC);
        }
        if (bigintA.equals(BigInteger.ONE)) {
          Assert.assertEquals(bigintB, bigintC);
        }
        if (bigintB.equals(BigInteger.ONE)) {
          Assert.assertEquals(bigintA, bigintC);
        }
      }
    }

    @Test
    public void TestMultiplyDivide() {
      FastRandom r = new FastRandom();
      for (int i = 0; i < 4000; ++i) {
        BigInteger bigintA = CBORTest.RandomBigInteger(r);
        BigInteger bigintB = CBORTest.RandomBigInteger(r);
        // Test that A*B/A = B and A*B/B = A
        BigInteger bigintC = bigintA.multiply(bigintB);
        BigInteger bigintRem;
        BigInteger bigintE;
        BigInteger bigintD;
        if (bigintB.signum()!=0) {
          {
BigInteger[] divrem=(bigintC).divideAndRemainder(bigintB);
bigintD=divrem[0];
bigintRem=divrem[1]; }
          if (!bigintD.equals(bigintA)) {
            Assert.assertEquals("TestMultiplyDivide " + bigintA + "; " + bigintB + ";\n" + bigintC,bigintA,bigintD);
          }
          if (bigintRem.signum()!=0) {
            Assert.assertEquals("TestMultiplyDivide " + bigintA + "; " + bigintB,BigInteger.ZERO,bigintRem);
          }
          bigintE = bigintC.divide(bigintB);
          if (!bigintD.equals(bigintE)) {
            // Testing that divideWithRemainder and division method return the same value
            Assert.assertEquals("TestMultiplyDivide " + bigintA + "; " + bigintB + ";\n" + bigintC,bigintD,bigintE);
          }
          bigintE = bigintC.remainder(bigintB);
          if (!bigintRem.equals(bigintE)) {
            Assert.assertEquals("TestMultiplyDivide " + bigintA + "; " + bigintB + ";\n" + bigintC,bigintRem,bigintE);
          }
          if (bigintE.signum() > 0 && !bigintC.mod(bigintB).equals(bigintE)) {
            Assert.fail("TestMultiplyDivide " + bigintA + "; " + bigintB + ";\n" + bigintC);
          }
        }
        if (bigintA.signum()!=0) {
          {
BigInteger[] divrem=(bigintC).divideAndRemainder(bigintA);
bigintD=divrem[0];
bigintRem=divrem[1]; }
          if (!bigintD.equals(bigintB)) {
            Assert.assertEquals("TestMultiplyDivide " + bigintA + "; " + bigintB,bigintB,bigintD);
          }
          if (bigintRem.signum()!=0) {
            Assert.assertEquals("TestMultiplyDivide " + bigintA + "; " + bigintB,BigInteger.ZERO,bigintRem);
          }
        }
        if (bigintB.signum()!=0) {
          {
BigInteger[] divrem=(bigintA).divideAndRemainder(bigintB);
bigintC=divrem[0];
bigintRem=divrem[1]; }
          bigintD = bigintB.multiply(bigintC);
          bigintD=bigintD.add(bigintRem);
          if (!bigintD.equals(bigintA)) {
            Assert.assertEquals("TestMultiplyDivide " + bigintA + "; " + bigintB,bigintA,bigintD);
          }
        }
      }
    }

    @Test
    public void TestSquareRoot() {
      FastRandom r = new FastRandom();
      for (int i = 0; i < 10000; ++i) {
        BigInteger bigintA = CBORTest.RandomBigInteger(r);
        if (bigintA.signum() < 0) {
          bigintA=bigintA.negate();
        }
        if (bigintA.signum() == 0) {
          bigintA = BigInteger.ONE;
        }
        BigInteger sr = bigintA.sqrt();
        BigInteger srsqr = sr.multiply(sr);
        sr=sr.add(BigInteger.ONE);
        BigInteger sronesqr = sr.multiply(sr);
        if (srsqr.compareTo(bigintA) > 0) {
          Assert.fail(srsqr + " not " + bigintA + " or less (TestSqrt, sqrt=" + sr + ")");
        }
        if (sronesqr.compareTo(bigintA) <= 0) {
          Assert.fail(srsqr + " not greater than " + bigintA + " (TestSqrt, sqrt=" + sr + ")");
        }
      }
    }

    @Test
    public void TestSmallIntDivide() {
      int a, b;
      FastRandom fr = new FastRandom();
      for (int i = 0; i < 10000; ++i) {
        a = fr.NextValue(0x1000000);
        b = fr.NextValue(0x1000000);
        if (b == 0) {
 continue;
}
        int c = a / b;
        BigInteger bigintA = BigInteger.valueOf(a);
        BigInteger bigintB = BigInteger.valueOf(b);
        BigInteger bigintC = bigintA.divide(bigintB);
        Assert.assertEquals(bigintC.intValue(), c);
      }
    }

    @Test
    public void TestMiscellaneous() {
      BigInteger minValue = BigInteger.valueOf(Integer.MIN_VALUE);
      BigInteger minValueTimes2 = minValue.add(minValue);
      Assert.assertEquals(Integer.MIN_VALUE, minValue.intValue());
      try {
 System.out.println(minValueTimes2.intValue());
Assert.fail("Should have failed");
} catch (ArithmeticException ex) {
} catch (Exception ex) {
 Assert.fail(ex.toString());
throw new IllegalStateException("", ex);
}
      BigInteger verybig = BigInteger.ONE.shiftLeft(80);
      try {
 System.out.println(verybig.intValue());
Assert.fail("Should have failed");
} catch (ArithmeticException ex) {
} catch (Exception ex) {
 Assert.fail(ex.toString());
throw new IllegalStateException("", ex);
}
      try {
 System.out.println(verybig.longValue());
Assert.fail("Should have failed");
} catch (ArithmeticException ex) {
} catch (Exception ex) {
 Assert.fail(ex.toString());
throw new IllegalStateException("", ex);
}
      try {
 BigInteger.ONE.PowBigIntVar(null);
Assert.fail("Should have failed");
} catch (NullPointerException ex) {
} catch (Exception ex) {
 Assert.fail(ex.toString());
throw new IllegalStateException("", ex);
}
      try {
 BigInteger.ONE.divideAndRemainder(BigInteger.ZERO);
Assert.fail("Should have failed");
} catch (ArithmeticException ex) {
} catch (Exception ex) {
 Assert.fail(ex.toString());
throw new IllegalStateException("", ex);
}
      try {
 BigInteger.ONE.pow(-1);
Assert.fail("Should have failed");
} catch (IllegalArgumentException ex) {
} catch (Exception ex) {
 Assert.fail(ex.toString());
throw new IllegalStateException("", ex);
}
      try {
 (BigInteger.ZERO.subtract(BigInteger.ONE)).PowBigIntVar(null);
Assert.fail("Should have failed");
} catch (NullPointerException ex) {
} catch (Exception ex) {
 Assert.fail(ex.toString());
throw new IllegalStateException("", ex);
}
      if(BigInteger.ONE.equals(BigInteger.ZERO))Assert.fail();
      if(verybig.equals(BigInteger.ZERO))Assert.fail();
      if(BigInteger.ONE.equals(BigInteger.ZERO.subtract(BigInteger.ONE)))Assert.fail();
      Assert.assertEquals(1, BigInteger.ONE.compareTo(null));
      BigInteger[] tmpsqrt = BigInteger.ZERO.sqrtWithRemainder();
      Assert.assertEquals(BigInteger.ZERO, tmpsqrt[0]);
    }

    @Test
    public void TestExceptions() {
      try {
        BigInteger.fromString("xyz");
        Assert.fail("Should have failed");
      } catch (NumberFormatException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromString("");
        Assert.fail("Should have failed");
      } catch (NumberFormatException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }

      try {
        BigInteger.fromSubstring(null, 0, 1);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromString(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }

      try {
        BigInteger.ZERO.testBit(-1);
        Assert.fail("Should have failed");
      } catch (IllegalArgumentException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromByteArray(null, false);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }

      try {
        BigInteger.fromSubstring("123", -1, 2);
        Assert.fail("Should have failed");
      } catch (IllegalArgumentException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromSubstring("123", 4, 2);
        Assert.fail("Should have failed");
      } catch (IllegalArgumentException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromSubstring("123", 1, -1);
        Assert.fail("Should have failed");
      } catch (IllegalArgumentException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromSubstring("123", 1, 4);
        Assert.fail("Should have failed");
      } catch (IllegalArgumentException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromSubstring("123", 1, 0);
        Assert.fail("Should have failed");
      } catch (IllegalArgumentException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromSubstring("123", 2, 1);
        Assert.fail("Should have failed");
      } catch (IllegalArgumentException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromString("x11");
        Assert.fail("Should have failed");
      } catch (NumberFormatException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromString(".");
        Assert.fail("Should have failed");
      } catch (NumberFormatException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromString("..");
        Assert.fail("Should have failed");
      } catch (NumberFormatException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.fromString("e200");
        Assert.fail("Should have failed");
      } catch (NumberFormatException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }

      try {
        BigInteger.ONE.mod(BigInteger.valueOf(-1));
        Assert.fail("Should have failed");
      } catch (ArithmeticException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.add(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.subtract(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.multiply(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.divide(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.divide(BigInteger.ZERO);
        Assert.fail("Should have failed");
      } catch (ArithmeticException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.remainder(BigInteger.ZERO);
        Assert.fail("Should have failed");
      } catch (ArithmeticException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.mod(BigInteger.ZERO);
        Assert.fail("Should have failed");
      } catch (ArithmeticException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.remainder(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.mod(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
      try {
        BigInteger.ONE.divideAndRemainder(null);
        Assert.fail("Should have failed");
      } catch (NullPointerException ex) {
      } catch (Exception ex) {
        Assert.fail(ex.toString());
        throw new IllegalStateException("", ex);
      }
    }

    @Test
    public void TestAddSubtract() {
      FastRandom r = new FastRandom();
      for (int i = 0; i < 10000; ++i) {
        BigInteger bigintA = CBORTest.RandomBigInteger(r);
        BigInteger bigintB = CBORTest.RandomBigInteger(r);
        BigInteger bigintC = bigintA.add(bigintB);
        BigInteger bigintD = bigintC.subtract(bigintB);
        if (!bigintD.equals(bigintA)) {
          Assert.assertEquals("TestAddSubtract " + bigintA + "; " + bigintB,bigintA,bigintD);
        }
        bigintD = bigintC.subtract(bigintA);
        if (!bigintD.equals(bigintB)) {
          Assert.assertEquals("TestAddSubtract " + bigintA + "; " + bigintB,bigintB,bigintD);
        }
        bigintC = bigintA.subtract(bigintB);
        bigintD = bigintC.add(bigintB);
        if (!bigintD.equals(bigintA)) {
          Assert.assertEquals("TestAddSubtract " + bigintA + "; " + bigintB,bigintA,bigintD);
        }
      }
    }

    @Test
    public void TestBitLength() {
      Assert.assertEquals(0, BigInteger.valueOf(0).bitLength());
      Assert.assertEquals(1, BigInteger.valueOf(1).bitLength());
      Assert.assertEquals(2, BigInteger.valueOf(2).bitLength());
      Assert.assertEquals(2, BigInteger.valueOf(2).bitLength());
      Assert.assertEquals(31, BigInteger.valueOf(Integer.MAX_VALUE).bitLength());
      Assert.assertEquals(31, BigInteger.valueOf(Integer.MIN_VALUE).bitLength());
      Assert.assertEquals(16, BigInteger.valueOf(65535).bitLength());
      Assert.assertEquals(16, BigInteger.valueOf(-65535).bitLength());
      Assert.assertEquals(17, BigInteger.valueOf(65536).bitLength());
      Assert.assertEquals(16, BigInteger.valueOf(-65536).bitLength());
      Assert.assertEquals(0, BigInteger.valueOf(-1).bitLength());
      Assert.assertEquals(1, BigInteger.valueOf(-2).bitLength());
    }

    @Test
    public void TestGcd() {
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("90635").gcd(BigInteger.fromString("52007")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("61962").gcd(BigInteger.fromString("88584")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("13533").gcd(BigInteger.fromString("57172")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("24098").gcd(BigInteger.fromString("13808")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("75755").gcd(BigInteger.fromString("57416")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("34122").gcd(BigInteger.fromString("21546")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("88457").gcd(BigInteger.fromString("39655")));
      Assert.assertEquals(
        BigInteger.valueOf(9),
        BigInteger.fromString("27495").gcd(BigInteger.fromString("53829")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("62145").gcd(BigInteger.fromString("41215")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("22695").gcd(BigInteger.fromString("44566")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("53022").gcd(BigInteger.fromString("31115")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("211").gcd(BigInteger.fromString("54726")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("62971").gcd(BigInteger.fromString("93594")));
      Assert.assertEquals(
        BigInteger.valueOf(15),
        BigInteger.fromString("76860").gcd(BigInteger.fromString("34095")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("95081").gcd(BigInteger.fromString("20784")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("77300").gcd(BigInteger.fromString("29226")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("31262").gcd(BigInteger.fromString("95190")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("10553").gcd(BigInteger.fromString("19731")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("39383").gcd(BigInteger.fromString("77891")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("96179").gcd(BigInteger.fromString("13620")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("61495").gcd(BigInteger.fromString("47858")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("87925").gcd(BigInteger.fromString("63346")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("19944").gcd(BigInteger.fromString("27203")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("26302").gcd(BigInteger.fromString("34391")));
      Assert.assertEquals(
        BigInteger.valueOf(27),
        BigInteger.fromString("56079").gcd(BigInteger.fromString("7020")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("83917").gcd(BigInteger.fromString("657")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("94695").gcd(BigInteger.fromString("2472")));
      Assert.assertEquals(
        BigInteger.valueOf(15),
        BigInteger.fromString("22935").gcd(BigInteger.fromString("58170")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("81878").gcd(BigInteger.fromString("46362")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("71186").gcd(BigInteger.fromString("12980")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("80245").gcd(BigInteger.fromString("36405")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("16081").gcd(BigInteger.fromString("93720")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("7946").gcd(BigInteger.fromString("4146")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("76845").gcd(BigInteger.fromString("2546")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("72397").gcd(BigInteger.fromString("29974")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("60885").gcd(BigInteger.fromString("33936")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("87146").gcd(BigInteger.fromString("96469")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("65883").gcd(BigInteger.fromString("65211")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("21463").gcd(BigInteger.fromString("42525")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("18706").gcd(BigInteger.fromString("40720")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("61391").gcd(BigInteger.fromString("85861")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("83740").gcd(BigInteger.fromString("77338")));
      Assert.assertEquals(
        BigInteger.valueOf(91),
        BigInteger.fromString("47866").gcd(BigInteger.fromString("78715")));
      Assert.assertEquals(
        BigInteger.valueOf(9),
        BigInteger.fromString("78129").gcd(BigInteger.fromString("1107")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("12629").gcd(BigInteger.fromString("86180")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("92329").gcd(BigInteger.fromString("40827")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("83999").gcd(BigInteger.fromString("41122")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("35724").gcd(BigInteger.fromString("58619")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("11645").gcd(BigInteger.fromString("62139")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("36632").gcd(BigInteger.fromString("51611")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("25484").gcd(BigInteger.fromString("89641")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("62847").gcd(BigInteger.fromString("38521")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("41428").gcd(BigInteger.fromString("2411")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("96716").gcd(BigInteger.fromString("42839")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("70386").gcd(BigInteger.fromString("36099")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("43301").gcd(BigInteger.fromString("3775")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("42042").gcd(BigInteger.fromString("35141")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("76843").gcd(BigInteger.fromString("26005")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("84687").gcd(BigInteger.fromString("53537")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("25292").gcd(BigInteger.fromString("340")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("17265").gcd(BigInteger.fromString("19439")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("20455").gcd(BigInteger.fromString("28769")));
      Assert.assertEquals(
        BigInteger.valueOf(7),
        BigInteger.fromString("73556").gcd(BigInteger.fromString("89117")));
      Assert.assertEquals(
        BigInteger.valueOf(8),
        BigInteger.fromString("73296").gcd(BigInteger.fromString("68888")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("19447").gcd(BigInteger.fromString("18293")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("47907").gcd(BigInteger.fromString("87533")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("61768").gcd(BigInteger.fromString("4404")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("79725").gcd(BigInteger.fromString("24134")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("27201").gcd(BigInteger.fromString("95072")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("55821").gcd(BigInteger.fromString("30150")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("4935").gcd(BigInteger.fromString("76877")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("42883").gcd(BigInteger.fromString("18132")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("9040").gcd(BigInteger.fromString("82684")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("83076").gcd(BigInteger.fromString("14715")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("94789").gcd(BigInteger.fromString("66964")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("6511").gcd(BigInteger.fromString("103")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("82992").gcd(BigInteger.fromString("86049")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("84020").gcd(BigInteger.fromString("2082")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("90785").gcd(BigInteger.fromString("39438")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("96885").gcd(BigInteger.fromString("72029")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("91199").gcd(BigInteger.fromString("64989")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("32855").gcd(BigInteger.fromString("21995")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("3095").gcd(BigInteger.fromString("63332")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("65058").gcd(BigInteger.fromString("45543")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("27661").gcd(BigInteger.fromString("43591")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("75849").gcd(BigInteger.fromString("45332")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("83577").gcd(BigInteger.fromString("71820")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("62520").gcd(BigInteger.fromString("30539")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("38275").gcd(BigInteger.fromString("40518")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("18228").gcd(BigInteger.fromString("18717")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("15826").gcd(BigInteger.fromString("66739")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("60535").gcd(BigInteger.fromString("20729")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("8429").gcd(BigInteger.fromString("4349")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("92958").gcd(BigInteger.fromString("16579")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("65393").gcd(BigInteger.fromString("76389")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("1772").gcd(BigInteger.fromString("13791")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("9816").gcd(BigInteger.fromString("88611")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("46595").gcd(BigInteger.fromString("24284")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("33355").gcd(BigInteger.fromString("56989")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("46540").gcd(BigInteger.fromString("14331")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("60999").gcd(BigInteger.fromString("95154")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("57066").gcd(BigInteger.fromString("87708")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("84385").gcd(BigInteger.fromString("14069")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("31857").gcd(BigInteger.fromString("48259")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("18625").gcd(BigInteger.fromString("18388")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("13151").gcd(BigInteger.fromString("74352")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("49235").gcd(BigInteger.fromString("82404")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("30362").gcd(BigInteger.fromString("54071")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("94297").gcd(BigInteger.fromString("51169")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("67094").gcd(BigInteger.fromString("11581")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("5377").gcd(BigInteger.fromString("29638")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("64630").gcd(BigInteger.fromString("65281")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("8447").gcd(BigInteger.fromString("42059")));
      Assert.assertEquals(
        BigInteger.valueOf(14),
        BigInteger.fromString("5684").gcd(BigInteger.fromString("91770")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("9083").gcd(BigInteger.fromString("41346")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("59535").gcd(BigInteger.fromString("46446")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("74053").gcd(BigInteger.fromString("64474")));
      Assert.assertEquals(
        BigInteger.valueOf(12),
        BigInteger.fromString("14508").gcd(BigInteger.fromString("2040")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("43347").gcd(BigInteger.fromString("63327")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("22324").gcd(BigInteger.fromString("10504")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("52012").gcd(BigInteger.fromString("14998")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("40914").gcd(BigInteger.fromString("72581")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("66884").gcd(BigInteger.fromString("37140")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("91352").gcd(BigInteger.fromString("65849")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("15507").gcd(BigInteger.fromString("81139")));
      Assert.assertEquals(
        BigInteger.valueOf(15),
        BigInteger.fromString("14865").gcd(BigInteger.fromString("91575")));
      Assert.assertEquals(
        BigInteger.valueOf(11),
        BigInteger.fromString("12485").gcd(BigInteger.fromString("83248")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("69988").gcd(BigInteger.fromString("82153")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("9089").gcd(BigInteger.fromString("49686")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("19463").gcd(BigInteger.fromString("52524")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("36206").gcd(BigInteger.fromString("65830")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("57206").gcd(BigInteger.fromString("2891")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("83964").gcd(BigInteger.fromString("43093")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("14650").gcd(BigInteger.fromString("69124")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("68555").gcd(BigInteger.fromString("16701")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("31987").gcd(BigInteger.fromString("15967")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("15078").gcd(BigInteger.fromString("66737")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("58993").gcd(BigInteger.fromString("18892")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("65454").gcd(BigInteger.fromString("97565")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("24219").gcd(BigInteger.fromString("30216")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("59700").gcd(BigInteger.fromString("65358")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("50737").gcd(BigInteger.fromString("50185")));
      Assert.assertEquals(
        BigInteger.valueOf(8),
        BigInteger.fromString("97296").gcd(BigInteger.fromString("38200")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("35162").gcd(BigInteger.fromString("87458")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("53993").gcd(BigInteger.fromString("31585")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("77146").gcd(BigInteger.fromString("79516")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("64396").gcd(BigInteger.fromString("5082")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("99517").gcd(BigInteger.fromString("52180")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("78997").gcd(BigInteger.fromString("4563")));
      Assert.assertEquals(
        BigInteger.valueOf(9),
        BigInteger.fromString("46215").gcd(BigInteger.fromString("2826")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("77183").gcd(BigInteger.fromString("82686")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("10329").gcd(BigInteger.fromString("43053")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("95832").gcd(BigInteger.fromString("38180")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("47565").gcd(BigInteger.fromString("61777")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("71398").gcd(BigInteger.fromString("5105")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("93834").gcd(BigInteger.fromString("92759")));
      Assert.assertEquals(
        BigInteger.valueOf(14),
        BigInteger.fromString("4018").gcd(BigInteger.fromString("59836")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("2990").gcd(BigInteger.fromString("28917")));
      Assert.assertEquals(
        BigInteger.valueOf(89),
        BigInteger.fromString("92738").gcd(BigInteger.fromString("6141")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("54404").gcd(BigInteger.fromString("58714")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("46385").gcd(BigInteger.fromString("52051")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("58912").gcd(BigInteger.fromString("41861")));
      Assert.assertEquals(
        BigInteger.valueOf(17),
        BigInteger.fromString("93194").gcd(BigInteger.fromString("78013")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("17767").gcd(BigInteger.fromString("95218")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("70217").gcd(BigInteger.fromString("24559")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("32809").gcd(BigInteger.fromString("87354")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("83297").gcd(BigInteger.fromString("96769")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("17238").gcd(BigInteger.fromString("65919")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("53345").gcd(BigInteger.fromString("35428")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("20746").gcd(BigInteger.fromString("6835")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("90775").gcd(BigInteger.fromString("95219")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("48729").gcd(BigInteger.fromString("17783")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("25130").gcd(BigInteger.fromString("10205")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("1037").gcd(BigInteger.fromString("87571")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("72321").gcd(BigInteger.fromString("75612")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("56449").gcd(BigInteger.fromString("96694")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("29070").gcd(BigInteger.fromString("73565")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("34932").gcd(BigInteger.fromString("36541")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("6298").gcd(BigInteger.fromString("69178")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("72817").gcd(BigInteger.fromString("64584")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("48412").gcd(BigInteger.fromString("18897")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("56686").gcd(BigInteger.fromString("83289")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("68609").gcd(BigInteger.fromString("85306")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("55239").gcd(BigInteger.fromString("73798")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("61821").gcd(BigInteger.fromString("94146")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("3550").gcd(BigInteger.fromString("59896")));
      Assert.assertEquals(
        BigInteger.valueOf(9),
        BigInteger.fromString("85635").gcd(BigInteger.fromString("67086")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("98809").gcd(BigInteger.fromString("37309")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("23456").gcd(BigInteger.fromString("4653")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("76096").gcd(BigInteger.fromString("75221")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("71592").gcd(BigInteger.fromString("83411")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("81142").gcd(BigInteger.fromString("26206")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("78134").gcd(BigInteger.fromString("71772")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("80923").gcd(BigInteger.fromString("51947")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("25216").gcd(BigInteger.fromString("15018")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("34884").gcd(BigInteger.fromString("87619")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("23467").gcd(BigInteger.fromString("45831")));
      Assert.assertEquals(
        BigInteger.valueOf(11),
        BigInteger.fromString("84469").gcd(BigInteger.fromString("28919")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("52340").gcd(BigInteger.fromString("67373")));
      Assert.assertEquals(
        BigInteger.valueOf(37),
        BigInteger.fromString("68857").gcd(BigInteger.fromString("43882")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("31995").gcd(BigInteger.fromString("36620")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("21386").gcd(BigInteger.fromString("79372")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("11443").gcd(BigInteger.fromString("34321")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("95455").gcd(BigInteger.fromString("62125")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("43519").gcd(BigInteger.fromString("35068")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("26568").gcd(BigInteger.fromString("62697")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("42990").gcd(BigInteger.fromString("58775")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("4623").gcd(BigInteger.fromString("47014")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("28614").gcd(BigInteger.fromString("42074")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("54425").gcd(BigInteger.fromString("62245")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("63683").gcd(BigInteger.fromString("5400")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("37778").gcd(BigInteger.fromString("73444")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("63244").gcd(BigInteger.fromString("8099")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("72125").gcd(BigInteger.fromString("36567")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("1844").gcd(BigInteger.fromString("97686")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("38719").gcd(BigInteger.fromString("44839")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("80027").gcd(BigInteger.fromString("22995")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("35641").gcd(BigInteger.fromString("80316")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("2815").gcd(BigInteger.fromString("74607")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("22035").gcd(BigInteger.fromString("82343")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("2645").gcd(BigInteger.fromString("3807")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("45606").gcd(BigInteger.fromString("75942")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("32658").gcd(BigInteger.fromString("50034")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("92994").gcd(BigInteger.fromString("57116")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("64825").gcd(BigInteger.fromString("83606")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("54124").gcd(BigInteger.fromString("1436")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("64991").gcd(BigInteger.fromString("9347")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("36180").gcd(BigInteger.fromString("45628")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("30217").gcd(BigInteger.fromString("87537")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("32704").gcd(BigInteger.fromString("11922")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("63513").gcd(BigInteger.fromString("72029")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("93082").gcd(BigInteger.fromString("23604")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("63969").gcd(BigInteger.fromString("56386")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("95696").gcd(BigInteger.fromString("5105")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("20335").gcd(BigInteger.fromString("54010")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("63337").gcd(BigInteger.fromString("722")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("23428").gcd(BigInteger.fromString("47159")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("72428").gcd(BigInteger.fromString("69556")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("64471").gcd(BigInteger.fromString("38785")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("33349").gcd(BigInteger.fromString("57618")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("97792").gcd(BigInteger.fromString("14285")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("92861").gcd(BigInteger.fromString("22559")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("6517").gcd(BigInteger.fromString("66107")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("13085").gcd(BigInteger.fromString("4259")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("74665").gcd(BigInteger.fromString("46729")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("91037").gcd(BigInteger.fromString("86843")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("7708").gcd(BigInteger.fromString("96745")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("79642").gcd(BigInteger.fromString("4781")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("52579").gcd(BigInteger.fromString("3648")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("17542").gcd(BigInteger.fromString("84888")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("28291").gcd(BigInteger.fromString("16975")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("70625").gcd(BigInteger.fromString("63373")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("88306").gcd(BigInteger.fromString("66171")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("81761").gcd(BigInteger.fromString("33048")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("26622").gcd(BigInteger.fromString("13595")));
      Assert.assertEquals(
        BigInteger.valueOf(14),
        BigInteger.fromString("8918").gcd(BigInteger.fromString("26992")));
      Assert.assertEquals(
        BigInteger.valueOf(7),
        BigInteger.fromString("64771").gcd(BigInteger.fromString("32165")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("95833").gcd(BigInteger.fromString("23832")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("24737").gcd(BigInteger.fromString("2162")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("59786").gcd(BigInteger.fromString("2789")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("24227").gcd(BigInteger.fromString("95721")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("61970").gcd(BigInteger.fromString("79085")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("82525").gcd(BigInteger.fromString("49337")));
      Assert.assertEquals(
        BigInteger.valueOf(3426),
        BigInteger.fromString("75372").gcd(BigInteger.fromString("44538")));
      Assert.assertEquals(
        BigInteger.valueOf(23),
        BigInteger.fromString("93518").gcd(BigInteger.fromString("86273")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("48827").gcd(BigInteger.fromString("37179")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("25487").gcd(BigInteger.fromString("59732")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("63937").gcd(BigInteger.fromString("43324")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("97103").gcd(BigInteger.fromString("47099")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("88913").gcd(BigInteger.fromString("49986")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("14144").gcd(BigInteger.fromString("75042")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("71873").gcd(BigInteger.fromString("58174")));
      Assert.assertEquals(
        BigInteger.valueOf(20),
        BigInteger.fromString("50480").gcd(BigInteger.fromString("33540")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("99922").gcd(BigInteger.fromString("19548")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("90174").gcd(BigInteger.fromString("30624")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("13625").gcd(BigInteger.fromString("97612")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("27765").gcd(BigInteger.fromString("41998")));
      Assert.assertEquals(
        BigInteger.valueOf(127),
        BigInteger.fromString("22606").gcd(BigInteger.fromString("96393")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("91870").gcd(BigInteger.fromString("65079")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("60017").gcd(BigInteger.fromString("4038")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("39838").gcd(BigInteger.fromString("90748")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("46878").gcd(BigInteger.fromString("35164")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("74479").gcd(BigInteger.fromString("42428")));
      Assert.assertEquals(
        BigInteger.valueOf(17),
        BigInteger.fromString("66623").gcd(BigInteger.fromString("55845")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("41755").gcd(BigInteger.fromString("51360")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("261").gcd(BigInteger.fromString("36246")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("38059").gcd(BigInteger.fromString("23662")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("39010").gcd(BigInteger.fromString("42912")));
      Assert.assertEquals(
        BigInteger.valueOf(9),
        BigInteger.fromString("37863").gcd(BigInteger.fromString("97236")));
      Assert.assertEquals(
        BigInteger.valueOf(56),
        BigInteger.fromString("60928").gcd(BigInteger.fromString("89544")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("48322").gcd(BigInteger.fromString("60805")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("21932").gcd(BigInteger.fromString("92998")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("32478").gcd(BigInteger.fromString("21797")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("10585").gcd(BigInteger.fromString("22858")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("13857").gcd(BigInteger.fromString("31051")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("51522").gcd(BigInteger.fromString("92896")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("26848").gcd(BigInteger.fromString("75798")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("61369").gcd(BigInteger.fromString("22483")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("19205").gcd(BigInteger.fromString("26840")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("54679").gcd(BigInteger.fromString("40188")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("58588").gcd(BigInteger.fromString("20252")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("14176").gcd(BigInteger.fromString("48546")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("98402").gcd(BigInteger.fromString("99018")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("77246").gcd(BigInteger.fromString("93851")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("56744").gcd(BigInteger.fromString("83218")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("24067").gcd(BigInteger.fromString("55216")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("10466").gcd(BigInteger.fromString("93748")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("41590").gcd(BigInteger.fromString("25136")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("7710").gcd(BigInteger.fromString("80679")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("75714").gcd(BigInteger.fromString("24676")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("42212").gcd(BigInteger.fromString("51318")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("58329").gcd(BigInteger.fromString("43583")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("16410").gcd(BigInteger.fromString("86816")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("82896").gcd(BigInteger.fromString("5121")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("74596").gcd(BigInteger.fromString("70222")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("9137").gcd(BigInteger.fromString("25138")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("83482").gcd(BigInteger.fromString("31904")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("73676").gcd(BigInteger.fromString("48339")));
      Assert.assertEquals(
        BigInteger.valueOf(7),
        BigInteger.fromString("74823").gcd(BigInteger.fromString("98336")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("63317").gcd(BigInteger.fromString("10846")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("13589").gcd(BigInteger.fromString("86545")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("61932").gcd(BigInteger.fromString("29291")));
      Assert.assertEquals(
        BigInteger.valueOf(184),
        BigInteger.fromString("61456").gcd(BigInteger.fromString("18952")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("24800").gcd(BigInteger.fromString("48038")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("18503").gcd(BigInteger.fromString("43229")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("26529").gcd(BigInteger.fromString("76985")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("13494").gcd(BigInteger.fromString("30374")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("98287").gcd(BigInteger.fromString("65924")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("53776").gcd(BigInteger.fromString("17654")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("36113").gcd(BigInteger.fromString("96567")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("77810").gcd(BigInteger.fromString("23344")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("14675").gcd(BigInteger.fromString("90591")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("43739").gcd(BigInteger.fromString("76659")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("60493").gcd(BigInteger.fromString("84642")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("71424").gcd(BigInteger.fromString("22425")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("65452").gcd(BigInteger.fromString("79291")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("11936").gcd(BigInteger.fromString("40813")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("52859").gcd(BigInteger.fromString("4532")));
      Assert.assertEquals(
        BigInteger.valueOf(13),
        BigInteger.fromString("18473").gcd(BigInteger.fromString("15249")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("68913").gcd(BigInteger.fromString("62939")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("27146").gcd(BigInteger.fromString("23302")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("76245").gcd(BigInteger.fromString("86118")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("46930").gcd(BigInteger.fromString("27539")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("29729").gcd(BigInteger.fromString("99248")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("69104").gcd(BigInteger.fromString("85371")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("10620").gcd(BigInteger.fromString("93959")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("41730").gcd(BigInteger.fromString("39561")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("42686").gcd(BigInteger.fromString("50810")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("51495").gcd(BigInteger.fromString("96543")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("679").gcd(BigInteger.fromString("98968")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("89457").gcd(BigInteger.fromString("3535")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("89625").gcd(BigInteger.fromString("67758")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("86429").gcd(BigInteger.fromString("91242")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("15028").gcd(BigInteger.fromString("20946")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("81457").gcd(BigInteger.fromString("67925")));
      Assert.assertEquals(
        BigInteger.valueOf(7),
        BigInteger.fromString("24241").gcd(BigInteger.fromString("12208")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("41746").gcd(BigInteger.fromString("91094")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("71282").gcd(BigInteger.fromString("68212")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("58626").gcd(BigInteger.fromString("22169")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("70605").gcd(BigInteger.fromString("64054")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("15772").gcd(BigInteger.fromString("99577")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("18095").gcd(BigInteger.fromString("34242")));
      Assert.assertEquals(
        BigInteger.valueOf(18),
        BigInteger.fromString("57906").gcd(BigInteger.fromString("60840")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("32269").gcd(BigInteger.fromString("75235")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("75371").gcd(BigInteger.fromString("83357")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("90480").gcd(BigInteger.fromString("35171")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("59484").gcd(BigInteger.fromString("88787")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("23392").gcd(BigInteger.fromString("31444")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("72687").gcd(BigInteger.fromString("87700")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("19821").gcd(BigInteger.fromString("69955")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("94801").gcd(BigInteger.fromString("33052")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("51475").gcd(BigInteger.fromString("80564")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("62060").gcd(BigInteger.fromString("45004")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("20116").gcd(BigInteger.fromString("49569")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("69522").gcd(BigInteger.fromString("99898")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("31250").gcd(BigInteger.fromString("46992")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("52508").gcd(BigInteger.fromString("63383")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("4764").gcd(BigInteger.fromString("51382")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("79342").gcd(BigInteger.fromString("65935")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("76782").gcd(BigInteger.fromString("73503")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("68983").gcd(BigInteger.fromString("84578")));
      Assert.assertEquals(
        BigInteger.valueOf(460),
        BigInteger.fromString("12880").gcd(BigInteger.fromString("57500")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("78900").gcd(BigInteger.fromString("74995")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("22481").gcd(BigInteger.fromString("23427")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("5896").gcd(BigInteger.fromString("18476")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("26033").gcd(BigInteger.fromString("46731")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("29174").gcd(BigInteger.fromString("45973")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("79687").gcd(BigInteger.fromString("31848")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("7579").gcd(BigInteger.fromString("73222")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("51320").gcd(BigInteger.fromString("86322")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("8652").gcd(BigInteger.fromString("31159")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("76046").gcd(BigInteger.fromString("70903")));
      Assert.assertEquals(
        BigInteger.valueOf(17),
        BigInteger.fromString("49419").gcd(BigInteger.fromString("62101")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("40766").gcd(BigInteger.fromString("4933")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("47888").gcd(BigInteger.fromString("99073")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("69155").gcd(BigInteger.fromString("27849")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("82196").gcd(BigInteger.fromString("15895")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("68106").gcd(BigInteger.fromString("72100")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("78358").gcd(BigInteger.fromString("30794")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("71489").gcd(BigInteger.fromString("3650")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("23717").gcd(BigInteger.fromString("54624")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("94759").gcd(BigInteger.fromString("31996")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("27234").gcd(BigInteger.fromString("51896")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("4226").gcd(BigInteger.fromString("7109")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("72818").gcd(BigInteger.fromString("19358")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("46899").gcd(BigInteger.fromString("78223")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("87891").gcd(BigInteger.fromString("36407")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("74827").gcd(BigInteger.fromString("68424")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("49157").gcd(BigInteger.fromString("85518")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("95419").gcd(BigInteger.fromString("67565")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("28774").gcd(BigInteger.fromString("54568")));
      Assert.assertEquals(
        BigInteger.valueOf(7),
        BigInteger.fromString("23527").gcd(BigInteger.fromString("7294")));
      Assert.assertEquals(
        BigInteger.valueOf(14),
        BigInteger.fromString("19656").gcd(BigInteger.fromString("7294")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("76133").gcd(BigInteger.fromString("1225")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("9788").gcd(BigInteger.fromString("88561")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("48670").gcd(BigInteger.fromString("90707")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("69844").gcd(BigInteger.fromString("67130")));
      Assert.assertEquals(
        BigInteger.valueOf(7),
        BigInteger.fromString("29176").gcd(BigInteger.fromString("59549")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("57415").gcd(BigInteger.fromString("40629")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("25762").gcd(BigInteger.fromString("40736")));
      Assert.assertEquals(
        BigInteger.valueOf(5),
        BigInteger.fromString("6145").gcd(BigInteger.fromString("43075")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("71645").gcd(BigInteger.fromString("74202")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("27570").gcd(BigInteger.fromString("12356")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("73141").gcd(BigInteger.fromString("32436")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("58411").gcd(BigInteger.fromString("26751")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("71988").gcd(BigInteger.fromString("90772")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("47075").gcd(BigInteger.fromString("58118")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("47171").gcd(BigInteger.fromString("63845")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("22169").gcd(BigInteger.fromString("34018")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("16774").gcd(BigInteger.fromString("52790")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("3614").gcd(BigInteger.fromString("34352")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("81295").gcd(BigInteger.fromString("61913")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("74629").gcd(BigInteger.fromString("89190")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("37922").gcd(BigInteger.fromString("13368")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("33145").gcd(BigInteger.fromString("26933")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("85912").gcd(BigInteger.fromString("61898")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("58119").gcd(BigInteger.fromString("60175")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("58833").gcd(BigInteger.fromString("16652")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("54326").gcd(BigInteger.fromString("98048")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("7078").gcd(BigInteger.fromString("7358")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("79239").gcd(BigInteger.fromString("68504")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("60424").gcd(BigInteger.fromString("77639")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("40979").gcd(BigInteger.fromString("53777")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("91893").gcd(BigInteger.fromString("39231")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("50364").gcd(BigInteger.fromString("92288")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("26342").gcd(BigInteger.fromString("91940")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("75449").gcd(BigInteger.fromString("60818")));
      Assert.assertEquals(
        BigInteger.valueOf(8),
        BigInteger.fromString("19288").gcd(BigInteger.fromString("24512")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("4107").gcd(BigInteger.fromString("44739")));
      Assert.assertEquals(
        BigInteger.valueOf(101),
        BigInteger.fromString("58681").gcd(BigInteger.fromString("98374")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("55414").gcd(BigInteger.fromString("22856")));
      Assert.assertEquals(
        BigInteger.valueOf(55),
        BigInteger.fromString("97955").gcd(BigInteger.fromString("70620")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("72885").gcd(BigInteger.fromString("86343")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("25432").gcd(BigInteger.fromString("61813")));
      Assert.assertEquals(
        BigInteger.valueOf(14),
        BigInteger.fromString("22554").gcd(BigInteger.fromString("71008")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("80593").gcd(BigInteger.fromString("48743")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("86969").gcd(BigInteger.fromString("18655")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("23780").gcd(BigInteger.fromString("49492")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("42154").gcd(BigInteger.fromString("70318")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("97300").gcd(BigInteger.fromString("87523")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("74153").gcd(BigInteger.fromString("10831")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("53513").gcd(BigInteger.fromString("18637")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("31108").gcd(BigInteger.fromString("54762")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("8050").gcd(BigInteger.fromString("78664")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("3930").gcd(BigInteger.fromString("20764")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("27166").gcd(BigInteger.fromString("29261")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("42687").gcd(BigInteger.fromString("89557")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("10741").gcd(BigInteger.fromString("26762")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("74392").gcd(BigInteger.fromString("7610")));
      Assert.assertEquals(
        BigInteger.valueOf(6),
        BigInteger.fromString("22506").gcd(BigInteger.fromString("74718")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("86972").gcd(BigInteger.fromString("42440")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("36422").gcd(BigInteger.fromString("32944")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("25315").gcd(BigInteger.fromString("86144")));
      Assert.assertEquals(
        BigInteger.valueOf(4),
        BigInteger.fromString("10912").gcd(BigInteger.fromString("82780")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("16355").gcd(BigInteger.fromString("90354")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("84412").gcd(BigInteger.fromString("90269")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("96331").gcd(BigInteger.fromString("54013")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("65874").gcd(BigInteger.fromString("84239")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("94918").gcd(BigInteger.fromString("50745")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("87213").gcd(BigInteger.fromString("14234")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("21515").gcd(BigInteger.fromString("45456")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("92973").gcd(BigInteger.fromString("20598")));
      Assert.assertEquals(
        BigInteger.valueOf(8),
        BigInteger.fromString("85992").gcd(BigInteger.fromString("19144")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("22452").gcd(BigInteger.fromString("753")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("19025").gcd(BigInteger.fromString("57777")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("74601").gcd(BigInteger.fromString("63830")));
      Assert.assertEquals(
        BigInteger.valueOf(17),
        BigInteger.fromString("71553").gcd(BigInteger.fromString("76364")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("60226").gcd(BigInteger.fromString("15861")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("8273").gcd(BigInteger.fromString("63874")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("40753").gcd(BigInteger.fromString("4166")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("62121").gcd(BigInteger.fromString("11393")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("28727").gcd(BigInteger.fromString("96833")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("60889").gcd(BigInteger.fromString("53838")));
      Assert.assertEquals(
        BigInteger.valueOf(2),
        BigInteger.fromString("97886").gcd(BigInteger.fromString("87402")));
      Assert.assertEquals(
        BigInteger.valueOf(3),
        BigInteger.fromString("33174").gcd(BigInteger.fromString("43053")));
      Assert.assertEquals(
        BigInteger.valueOf(16),
        BigInteger.fromString("99664").gcd(BigInteger.fromString("63488")));
      Assert.assertEquals(
        BigInteger.ONE,
        BigInteger.fromString("86998").gcd(BigInteger.fromString("84109")));
    }
  }
